{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 151, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/arman/ISC/citasmedicas_db/app/api/bitacora/route.ts"],"sourcesContent":["import { NextResponse } from 'next/server'\r\nimport mysql from 'mysql2/promise';\r\n\r\n// Configuración de la base de datos\r\nconst dbConfig = {\r\n  host: process.env.DB_HOST || 'localhost',\r\n  user: process.env.DB_USER || 'root',\r\n  password: process.env.DB_PASSWORD || '',\r\n  database: process.env.DB_NAME || 'clinica_db'\r\n};\r\n\r\n// GET /api/bitacora - obtener todas las entradas de la bitácora\r\nexport async function GET() {\r\n  console.log('[GET /api/bitacora] Iniciando petición...');\r\n  let conn;\r\n  try {\r\n    console.log('[GET /api/bitacora] Conectando a la base de datos...');\r\n    conn = await mysql.createConnection(dbConfig);\r\n    console.log('[GET /api/bitacora] Conexión existosa');\r\n\r\n    console.log('[GET /api/bitacora] Ejecutando consulta SQL...');\r\n    const[rows] = await conn.execute(`\r\n      SELECT \r\n        b.log_id,\r\n        b.tipo,\r\n        b.tabla_afectada,\r\n        b.registro_id,\r\n        b.usuario_id,\r\n        b.fecha_hora,\r\n        b.detalle,\r\n        u.email\r\n      FROM bitacora b\r\n      LEFT JOIN usuarios u ON b.usuario_id = u.user_id\r\n      ORDER BY b.fecha_hora DESC\r\n      `);\r\n      console.log('[GET /api/bitacora] Consulta ejecutada. Resultados: ', rows);\r\n\r\n      return NextResponse.json(rows);\r\n  } catch (err) {\r\n    console.error('[GET /api/bitacora] Error:', err);\r\n    console.error('[GET /api/bitacora] Stack trace:', err.stack);\r\n    return NextResponse.json(\r\n      { error: 'Error al obtener bitácora' },\r\n      { status: 500 }\r\n    );\r\n  } finally {\r\n    if (conn) {\r\n      await conn.end();\r\n      console.log('[GET /api/bitacora] Conexión cerrada');\r\n    }\r\n  }\r\n\r\n} "],"names":[],"mappings":";;;AAAA;AACA;;;AAEA,oCAAoC;AACpC,MAAM,WAAW;IACf,MAAM,QAAQ,GAAG,CAAC,OAAO,IAAI;IAC7B,MAAM,QAAQ,GAAG,CAAC,OAAO,IAAI;IAC7B,UAAU,QAAQ,GAAG,CAAC,WAAW,IAAI;IACrC,UAAU,QAAQ,GAAG,CAAC,OAAO,IAAI;AACnC;AAGO,eAAe;IACpB,QAAQ,GAAG,CAAC;IACZ,IAAI;IACJ,IAAI;QACF,QAAQ,GAAG,CAAC;QACZ,OAAO,MAAM,mIAAA,CAAA,UAAK,CAAC,gBAAgB,CAAC;QACpC,QAAQ,GAAG,CAAC;QAEZ,QAAQ,GAAG,CAAC;QACZ,MAAK,CAAC,KAAK,GAAG,MAAM,KAAK,OAAO,CAAC,CAAC;;;;;;;;;;;;;MAahC,CAAC;QACD,QAAQ,GAAG,CAAC,wDAAwD;QAEpE,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;IAC7B,EAAE,OAAO,KAAK;QACZ,QAAQ,KAAK,CAAC,8BAA8B;QAC5C,QAAQ,KAAK,CAAC,oCAAoC,IAAI,KAAK;QAC3D,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO;QAA4B,GACrC;YAAE,QAAQ;QAAI;IAElB,SAAU;QACR,IAAI,MAAM;YACR,MAAM,KAAK,GAAG;YACd,QAAQ,GAAG,CAAC;QACd;IACF;AAEF"}},
    {"offset": {"line": 204, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}