{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":["file:///home/senorbuen0/ISC/sem6/bd/proyecto/citasmedicas_db/app/dashboard/doctor/appointments/page.jsx"],"sourcesContent":["\"use client\"\n\nimport { useState, useEffect } from \"react\"\nimport { motion } from \"framer-motion\"\nimport {\n  Plus,\n  Bell,\n  Stethoscope,\n  LogOut,\n  Users,\n  CalendarIcon,\n  Activity,\n  Clock,\n  ChevronLeft,\n  ChevronRight,\n  X,\n} from \"lucide-react\"\nimport { useRouter } from 'next/navigation'\n\nexport default function CalendarPage() {\n  const [selectedDate, setSelectedDate] = useState(new Date())\n  const [currentMonth, setCurrentMonth] = useState(new Date())\n  const [showMonthPicker, setShowMonthPicker] = useState(false)\n  const [showYearPicker, setShowYearPicker] = useState(false)\n  const [doctorName, setDoctorName] = useState(\"\")\n  const [loading, setLoading] = useState(true)\n  const [error, setError] = useState(null)\n  const [appointments, setAppointments] = useState([])\n  const [doctorId, setDoctorId] = useState(null)\n  const [showAllAppointments, setShowAllAppointments] = useState(false)\n  const [showNewAppointmentModal, setShowNewAppointmentModal] = useState(false)\n  const [showEditAppointmentModal, setShowEditAppointmentModal] = useState(false)\n  const [editingAppointment, setEditingAppointment] = useState(null)\n  const [newAppointment, setNewAppointment] = useState({\n    paciente_id: \"\",\n    fecha_hora: \"\",\n    notas: \"\",\n    estado_id: 1\n  })\n  const [patients, setPatients] = useState([])\n  const [loadingPatients, setLoadingPatients] = useState(false)\n  const [formError, setFormError] = useState(\"\")\n  const router = useRouter()\n\n  useEffect(() => {\n    const fetchDoctorData = async () => {\n      try {\n        const userId = sessionStorage.getItem('user_id')\n        if (!userId) {\n          throw new Error('No se encontró información de sesión')\n        }\n\n        const response = await fetch(`/api/doctores/${userId}`)\n        if (!response.ok) {\n          throw new Error('Error al cargar datos del doctor')\n        }\n\n        const data = await response.json()\n        setDoctorName(`${data.primer_nombre} ${data.segundo_nombre || ''} ${data.apellido_paterno} ${data.apellido_materno || ''}`)\n        setDoctorId(data.doctor_id)\n        return data.doctor_id\n      } catch (err) {\n        console.error('Error al cargar datos del doctor:', err)\n        setError(err.message)\n        return null\n      }\n    }\n\n    const fetchAppointments = async (id) => {\n      if (!id) return\n\n      try {\n        const response = await fetch(`/api/citas?doctorId=${id}`)\n        if (!response.ok) {\n          throw new Error('Error al cargar las citas')\n        }\n        const data = await response.json()\n        setAppointments(data)\n      } catch (err) {\n        console.error('Error al cargar citas:', err)\n        setError(err.message)\n      } finally {\n        setLoading(false)\n      }\n    }\n\n    const initializeData = async () => {\n      const id = await fetchDoctorData()\n      if (id) {\n        await fetchAppointments(id)\n      }\n    }\n\n    initializeData()\n  }, [])\n\n  // Función para obtener las citas del día seleccionado\n  const getAppointmentsForSelectedDate = () => {\n    return appointments.filter(appointment => {\n      const appointmentDate = new Date(appointment.fecha_hora)\n      return (\n        appointmentDate.getDate() === selectedDate.getDate() &&\n        appointmentDate.getMonth() === selectedDate.getMonth() &&\n        appointmentDate.getFullYear() === selectedDate.getFullYear()\n      )\n    })\n  }\n\n  // Función para obtener el estado de la cita en español\n  const getAppointmentStatus = (estadoId) => {\n    switch (estadoId) {\n      case 1: return { text: \"Programada\", color: \"yellow\" }\n      case 2: return { text: \"Confirmada\", color: \"green\" }\n      case 3: return { text: \"Cancelada\", color: \"red\" }\n      case 4: return { text: \"Completada\", color: \"blue\" }\n      case 5: return { text: \"No asistió\", color: \"red\" }\n      default: return { text: \"Desconocido\", color: \"gray\" }\n    }\n  }\n\n  // Función para formatear la hora de la cita\n  const formatAppointmentTime = (fechaHora) => {\n    const date = new Date(fechaHora)\n    return date.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' })\n  }\n\n  const getDaysInMonth = (date) => {\n    const year = date.getFullYear()\n    const month = date.getMonth()\n    const firstDay = new Date(year, month, 1)\n    const lastDay = new Date(year, month + 1, 0)\n    const daysInMonth = lastDay.getDate()\n    const startingDayOfWeek = firstDay.getDay()\n\n    const days = []\n\n    // Días del mes anterior\n    for (let i = startingDayOfWeek - 1; i >= 0; i--) {\n      const prevDate = new Date(year, month, -i)\n      days.push({ date: prevDate, isCurrentMonth: false })\n    }\n\n    // Días del mes actual\n    for (let day = 1; day <= daysInMonth; day++) {\n      days.push({ date: new Date(year, month, day), isCurrentMonth: true })\n    }\n\n    // Días del mes siguiente para completar la grilla\n    const remainingDays = 42 - days.length\n    for (let day = 1; day <= remainingDays; day++) {\n      days.push({ date: new Date(year, month + 1, day), isCurrentMonth: false })\n    }\n\n    return days\n  }\n\n  const navigateMonth = (direction) => {\n    const newMonth = new Date(currentMonth)\n    newMonth.setMonth(currentMonth.getMonth() + direction)\n    setCurrentMonth(newMonth)\n  }\n\n  const navigateYear = (direction) => {\n    const newMonth = new Date(currentMonth)\n    newMonth.setFullYear(currentMonth.getFullYear() + direction)\n    setCurrentMonth(newMonth)\n  }\n\n  const selectMonth = (monthIndex) => {\n    const newMonth = new Date(currentMonth)\n    newMonth.setMonth(monthIndex)\n    setCurrentMonth(newMonth)\n    setShowMonthPicker(false)\n  }\n\n  const selectYear = (year) => {\n    const newMonth = new Date(currentMonth)\n    newMonth.setFullYear(year)\n    setCurrentMonth(newMonth)\n    setShowYearPicker(false)\n  }\n\n  const getYearRange = () => {\n    const currentYear = new Date().getFullYear()\n    return Array.from({ length: 10 }, (_, i) => currentYear + i)\n  }\n\n  const isToday = (date) => {\n    const today = new Date()\n    return (\n      date.getDate() === today.getDate() &&\n      date.getMonth() === today.getMonth() &&\n      date.getFullYear() === today.getFullYear()\n    )\n  }\n\n  const isSelected = (date) => {\n    return (\n      date.getDate() === selectedDate.getDate() &&\n      date.getMonth() === selectedDate.getMonth() &&\n      date.getFullYear() === selectedDate.getFullYear()\n    )\n  }\n\n  const monthNames = [\n    \"Enero\",\n    \"Febrero\",\n    \"Marzo\",\n    \"Abril\",\n    \"Mayo\",\n    \"Junio\",\n    \"Julio\",\n    \"Agosto\",\n    \"Septiembre\",\n    \"Octubre\",\n    \"Noviembre\",\n    \"Diciembre\",\n  ]\n\n  const dayNames = [\"Dom\", \"Lun\", \"Mar\", \"Mié\", \"Jue\", \"Vie\", \"Sáb\"]\n\n  const handleMonthPicker = () => {\n    setShowMonthPicker((prev) => !prev)\n    setShowYearPicker(false)\n  }\n\n  const handleYearPicker = () => {\n    setShowYearPicker((prev) => !prev)\n    setShowMonthPicker(false)\n  }\n\n  // Días con citas en el mes actual\n  const daysWithAppointments = appointments\n    .filter(app => {\n      const date = new Date(app.fecha_hora)\n      return (\n        date.getMonth() === currentMonth.getMonth() &&\n        date.getFullYear() === currentMonth.getFullYear()\n      )\n    })\n    .map(app => new Date(app.fecha_hora).getDate())\n\n  // Add this new function to fetch patients\n  const fetchPatients = async () => {\n    setLoadingPatients(true)\n    try {\n      const response = await fetch(`/api/doctores/${doctorId}/pacientes`)\n      if (!response.ok) {\n        throw new Error('Error al cargar pacientes')\n      }\n      const data = await response.json()\n      setPatients(data)\n    } catch (err) {\n      console.error('Error al cargar pacientes:', err)\n      setError(err.message)\n    } finally {\n      setLoadingPatients(false)\n    }\n  }\n\n  // Add this new function to handle new appointment creation\n  const handleCreateAppointment = async (e) => {\n    e.preventDefault()\n    setFormError(\"\")\n\n    // Validate appointment time\n    const appointmentTime = new Date(newAppointment.fecha_hora)\n    const hours = appointmentTime.getHours()\n    const minutes = appointmentTime.getMinutes()\n\n    if (hours < 8 || (hours === 20 && minutes > 0) || hours > 20) {\n      setFormError(\"Las citas deben programarse entre las 8:00 AM y las 8:00 PM\")\n      return\n    }\n\n    try {\n      const response = await fetch('/api/citas', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          ...newAppointment,\n          doctor_id: doctorId\n        })\n      })\n\n      if (!response.ok) {\n        throw new Error('Error al crear la cita')\n      }\n\n      const data = await response.json()\n      \n      // Find the selected patient's data\n      const selectedPatient = patients.find(p => p.paciente_id === parseInt(newAppointment.paciente_id))\n      \n      // Refresh appointments list with patient name included\n      const updatedAppointments = [...appointments, {\n        ...newAppointment,\n        cita_id: data.cita_id,\n        doctor_id: doctorId,\n        creado_el: new Date().toISOString(),\n        paciente_nombre: `${selectedPatient.primer_nombre} ${selectedPatient.apellido_paterno}`\n      }]\n      setAppointments(updatedAppointments)\n      \n      // Reset form and close modal\n      setNewAppointment({\n        paciente_id: \"\",\n        fecha_hora: \"\",\n        notas: \"\",\n        estado_id: 1\n      })\n      setShowNewAppointmentModal(false)\n    } catch (err) {\n      console.error('Error al crear cita:', err)\n      setFormError(err.message)\n    }\n  }\n\n  // Modify the useEffect to fetch patients when either modal opens\n  useEffect(() => {\n    if (showNewAppointmentModal || showEditAppointmentModal) {\n      fetchPatients()\n    }\n  }, [showNewAppointmentModal, showEditAppointmentModal])\n\n  // Add this new function to handle appointment editing\n  const handleEditAppointment = async (e) => {\n    e.preventDefault()\n    setFormError(\"\")\n\n    // Validate appointment time\n    const appointmentTime = new Date(editingAppointment.fecha_hora)\n    const hours = appointmentTime.getHours()\n    const minutes = appointmentTime.getMinutes()\n\n    if (hours < 8 || (hours === 20 && minutes > 0) || hours > 20) {\n      setFormError(\"Las citas deben programarse entre las 8:00 AM y las 8:00 PM\")\n      return\n    }\n\n    try {\n      const response = await fetch('/api/citas', {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          cita_id: editingAppointment.cita_id,\n          paciente_id: editingAppointment.paciente_id,\n          doctor_id: doctorId,\n          fecha_hora: editingAppointment.fecha_hora,\n          estado_id: editingAppointment.estado_id,\n          notas: editingAppointment.notas\n        })\n      })\n\n      if (!response.ok) {\n        throw new Error('Error al actualizar la cita')\n      }\n\n      // Update the appointments list\n      const updatedAppointments = appointments.map(app => \n        app.cita_id === editingAppointment.cita_id ? editingAppointment : app\n      )\n      setAppointments(updatedAppointments)\n      \n      // Close modal and reset state\n      setShowEditAppointmentModal(false)\n      setEditingAppointment(null)\n    } catch (err) {\n      console.error('Error al actualizar cita:', err)\n      setFormError(err.message)\n    }\n  }\n\n  // Update the handleOpenEditModal function\n  const handleOpenEditModal = (appointment) => {\n    // Format the date for the datetime-local input using local time\n    const date = new Date(appointment.fecha_hora)\n    const year = date.getFullYear()\n    const month = String(date.getMonth() + 1).padStart(2, '0')\n    const day = String(date.getDate()).padStart(2, '0')\n    const hours = String(date.getHours()).padStart(2, '0')\n    const minutes = String(date.getMinutes()).padStart(2, '0')\n    \n    const formattedDate = `${year}-${month}-${day}T${hours}:${minutes}`\n    \n    setEditingAppointment({\n      ...appointment,\n      fecha_hora: formattedDate\n    })\n    setShowEditAppointmentModal(true)\n    fetchPatients() // Ensure patients are loaded when opening the modal\n  }\n\n  // Add this new function to handle appointment confirmation\n  const handleConfirmAppointment = async (appointment) => {\n    try {\n      // Format the date to match the database format (YYYY-MM-DD HH:mm:ss)\n      const formattedDate = new Date(appointment.fecha_hora)\n        .toISOString()\n        .replace('T', ' ')\n        .slice(0, 19)\n\n      const response = await fetch('/api/citas', {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          cita_id: appointment.cita_id,\n          paciente_id: appointment.paciente_id,\n          doctor_id: doctorId,\n          fecha_hora: formattedDate,\n          estado_id: 2, // Change to \"Confirmada\"\n          notas: appointment.notas\n        })\n      })\n\n      if (!response.ok) {\n        throw new Error('Error al confirmar la cita')\n      }\n\n      // Update the appointments list\n      const updatedAppointments = appointments.map(app => \n        app.cita_id === appointment.cita_id \n          ? { ...app, estado_id: 2 }\n          : app\n      )\n      setAppointments(updatedAppointments)\n    } catch (err) {\n      console.error('Error al confirmar cita:', err)\n      setError(err.message)\n    }\n  }\n\n  const handleLogout = () => {\n    // Clear any stored tokens or user data\n    localStorage.removeItem('token')\n    localStorage.removeItem('user')\n    \n    // Redirect to login page\n    router.push('/login')\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-sky-50 via-blue-50 to-indigo-100\">\n      {/* Header */}\n      <motion.header\n        initial={{ y: -50, opacity: 0 }}\n        animate={{ y: 0, opacity: 1 }}\n        className=\"bg-white/80 backdrop-blur-lg border-b border-sky-200 px-6 py-4\"\n      >\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex items-center space-x-4\">\n            <div className=\"w-10 h-10 bg-gradient-to-br from-sky-400 to-blue-500 rounded-xl flex items-center justify-center\">\n              <Stethoscope className=\"text-white\" size={20} />\n            </div>\n            <div>\n              <h1 className=\"text-xl font-bold text-slate-800\">Calendario de Citas</h1>\n              <p className=\"text-sm text-slate-600\">{loading ? 'Cargando...' : error ? 'Error al cargar datos' : doctorName}</p>\n            </div>\n          </div>\n\n          <div className=\"flex items-center space-x-4\">\n            <span className=\"text-sm text-slate-600\">Hoy: {new Date().toLocaleDateString(\"es-ES\")}</span>\n            <motion.button\n              whileHover={{ scale: 1.05 }}\n              className=\"p-2 text-slate-600 hover:text-sky-600 transition-colors\"\n            >\n              <Bell size={20} />\n            </motion.button>\n            <motion.button\n              whileHover={{ scale: 1.02 }}\n              onClick={() => setShowNewAppointmentModal(true)}\n              className=\"flex items-center space-x-2 px-4 py-2 bg-sky-500 text-white rounded-lg hover:bg-sky-600 transition-colors\"\n            >\n              <Plus size={16} />\n              <span>Nueva Cita</span>\n            </motion.button>\n            <motion.button\n              whileHover={{ scale: 1.05 }}\n              onClick={handleLogout}\n              className=\"p-2 text-slate-600 hover:text-red-600 transition-colors\"\n            >\n              <LogOut size={20} />\n            </motion.button>\n          </div>\n        </div>\n      </motion.header>\n\n      <div className=\"flex\">\n        {/* Sidebar */}\n        <motion.aside\n          initial={{ x: -100, opacity: 0 }}\n          animate={{ x: 0, opacity: 1 }}\n          className=\"w-64 bg-white/60 backdrop-blur-lg border-r border-sky-200 min-h-screen p-6\"\n        >\n          <nav className=\"space-y-4\">\n            <motion.a\n              href=\"/dashboard/doctor\"\n              whileHover={{ scale: 1.02 }}\n              whileTap={{ scale: 0.98 }}\n              className=\"w-full flex items-center space-x-3 px-4 py-3 rounded-xl text-slate-600 hover:bg-sky-50 transition-all duration-300\"\n            >\n              <Activity size={20} />\n              <span className=\"font-medium\">Dashboard</span>\n            </motion.a>\n\n            <motion.a\n              href=\"/dashboard/doctor/patients\"\n              whileHover={{ scale: 1.02 }}\n              whileTap={{ scale: 0.98 }}\n              className=\"w-full flex items-center space-x-3 px-4 py-3 rounded-xl text-slate-600 hover:bg-sky-50 transition-all duration-300\"\n            >\n              <Users size={20} />\n              <span className=\"font-medium\">Pacientes</span>\n            </motion.a>\n\n            <motion.div\n              whileHover={{ scale: 1.02 }}\n              className=\"w-full flex items-center space-x-3 px-4 py-3 rounded-xl bg-sky-100 text-sky-700 shadow-sm\"\n            >\n              <CalendarIcon size={20} />\n              <span className=\"font-medium\">Calendario</span>\n            </motion.div>\n          </nav>\n        </motion.aside>\n\n        {/* Main Content */}\n        <main className=\"flex-1 p-6\">\n          <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n            {/* Calendar */}\n            <motion.div\n              initial={{ opacity: 0, y: 20 }}\n              animate={{ opacity: 1, y: 0 }}\n              className=\"lg:col-span-2 bg-white/80 backdrop-blur-lg rounded-2xl p-6 border border-sky-100 shadow-lg\"\n            >\n              {/* Calendar Header */}\n              <div className=\"flex items-center justify-between mb-6\">\n                <div className=\"flex items-center space-x-4\">\n                  <div className=\"relative\">\n                    <button\n                      onClick={handleMonthPicker}\n                      className=\"text-xl font-bold text-slate-800 hover:text-sky-600 transition-colors\"\n                    >\n                      {monthNames[currentMonth.getMonth()]}\n                    </button>\n                    {showMonthPicker && (\n                      <div className=\"absolute top-full left-0 mt-2 min-w-[120px] bg-white rounded-lg shadow-xl border border-sky-100 p-2 z-30\">\n                        <div className=\"grid grid-cols-3 gap-2\">\n                          {monthNames.map((month, index) => (\n                            <button\n                              key={month}\n                              onClick={() => selectMonth(index)}\n                              className=\"px-1 py-1 text-sm text-slate-600 hover:bg-sky-50 hover:text-sky-600 rounded-md transition-colors w-full text-left\"\n                            >\n                              {month.slice(0, 3)}\n                            </button>\n                          ))}\n                        </div>\n                      </div>\n                    )}\n                  </div>\n                  <div className=\"relative\">\n                    <button\n                      onClick={handleYearPicker}\n                      className=\"text-xl font-bold text-slate-800 hover:text-sky-600 transition-colors\"\n                    >\n                      {currentMonth.getFullYear()}\n                    </button>\n                    {showYearPicker && (\n                      <div className=\"absolute top-full left-0 mt-2 min-w-[100px] bg-white rounded-lg shadow-xl border border-sky-100 p-2 z-30\">\n                        <div className=\"grid grid-cols-2 gap-2\">\n                          {getYearRange().map((year) => (\n                            <button\n                              key={year}\n                              onClick={() => selectYear(year)}\n                              className=\"px-1 py-1 text-sm text-slate-600 hover:bg-sky-50 hover:text-sky-600 rounded-md transition-colors w-full text-left\"\n                            >\n                              {year}\n                            </button>\n                          ))}\n                        </div>\n                      </div>\n                    )}\n                  </div>\n                </div>\n                <div className=\"flex space-x-2\">\n                  <motion.button\n                    whileHover={{ scale: 1.1 }}\n                    whileTap={{ scale: 0.9 }}\n                    onClick={() => navigateYear(-1)}\n                    className=\"p-2 text-slate-600 hover:text-sky-600 hover:bg-sky-50 rounded-lg transition-colors\"\n                  >\n                    <ChevronLeft size={20} />\n                  </motion.button>\n                  <motion.button\n                    whileHover={{ scale: 1.1 }}\n                    whileTap={{ scale: 0.9 }}\n                    onClick={() => navigateMonth(-1)}\n                    className=\"p-2 text-slate-600 hover:text-sky-600 hover:bg-sky-50 rounded-lg transition-colors\"\n                  >\n                    <ChevronLeft size={20} />\n                  </motion.button>\n                  <motion.button\n                    whileHover={{ scale: 1.1 }}\n                    whileTap={{ scale: 0.9 }}\n                    onClick={() => navigateMonth(1)}\n                    className=\"p-2 text-slate-600 hover:text-sky-600 hover:bg-sky-50 rounded-lg transition-colors\"\n                  >\n                    <ChevronRight size={20} />\n                  </motion.button>\n                  <motion.button\n                    whileHover={{ scale: 1.1 }}\n                    whileTap={{ scale: 0.9 }}\n                    onClick={() => navigateYear(1)}\n                    className=\"p-2 text-slate-600 hover:text-sky-600 hover:bg-sky-50 rounded-lg transition-colors\"\n                  >\n                    <ChevronRight size={20} />\n                  </motion.button>\n                </div>\n              </div>\n\n              {/* Days of Week */}\n              <div className=\"grid grid-cols-7 gap-1 mb-2\">\n                {dayNames.map((day) => (\n                  <div key={day} className=\"p-2 text-center text-sm font-medium text-slate-600\">\n                    {day}\n                  </div>\n                ))}\n              </div>\n\n              {/* Calendar Grid */}\n              <div className=\"grid grid-cols-7 gap-1\">\n                {getDaysInMonth(currentMonth).map((day, index) => (\n                  <motion.button\n                    key={index}\n                    whileHover={{ scale: 1.05 }}\n                    whileTap={{ scale: 0.95 }}\n                    onClick={() => setSelectedDate(day.date)}\n                    className={`p-3 text-sm rounded-lg transition-all duration-200 ${\n                      !day.isCurrentMonth\n                        ? \"text-slate-300\"\n                        : isToday(day.date)\n                          ? \"bg-sky-500 text-white font-bold\"\n                          : isSelected(day.date)\n                            ? \"bg-sky-100 text-sky-700 font-semibold\"\n                            : daysWithAppointments.includes(day.date.getDate())\n                              ? \"ring-2 ring-sky-400 bg-sky-50 text-sky-800 font-semibold\"\n                              : \"text-slate-700 hover:bg-sky-50\"\n                    }`}\n                  >\n                    {day.date.getDate()}\n                  </motion.button>\n                ))}\n              </div>\n            </motion.div>\n\n            {/* Appointments for Selected Date */}\n            <motion.div\n              initial={{ opacity: 0, y: 20 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{ delay: 0.1 }}\n              className=\"bg-white/80 backdrop-blur-lg rounded-2xl p-6 border border-sky-100 shadow-lg\"\n            >\n              <div className=\"flex items-center justify-between mb-4\">\n                <h3 className=\"text-lg font-bold text-slate-800\">\n                  Citas del {selectedDate.toLocaleDateString(\"es-ES\")}\n                </h3>\n              </div>\n              <div className=\"flex items-center space-x-2 mb-1\">\n                <div className=\"w-3 h-3 bg-green-500 rounded-full\"></div>\n                <span className=\"text-sm text-slate-600\">{getAppointmentsForSelectedDate().length} citas</span>\n              </div>\n              <div className=\"mb-2\">\n                <button\n                  className=\"text-sm italic text-slate-600 underline hover:text-sky-800 transition-colors\"\n                  onClick={() => setShowAllAppointments(true)}\n                >\n                  Total de citas: {appointments.length}\n                </button>\n              </div>\n\n              <div className=\"space-y-3 max-h-96 overflow-y-auto\">\n                {loading ? (\n                  <div className=\"text-center py-4\">\n                    <p className=\"text-slate-600\">Cargando citas...</p>\n                  </div>\n                ) : error ? (\n                  <div className=\"text-center py-4\">\n                    <p className=\"text-red-600\">{error}</p>\n                  </div>\n                ) : getAppointmentsForSelectedDate().length === 0 ? (\n                  <div className=\"text-center py-4\">\n                    <p className=\"text-slate-600\">No hay citas programadas para este día</p>\n                  </div>\n                ) : (\n                  getAppointmentsForSelectedDate().map((appointment, index) => {\n                    const status = getAppointmentStatus(appointment.estado_id)\n                    return (\n                      <motion.div\n                        key={appointment.cita_id}\n                        initial={{ opacity: 0, x: -20 }}\n                        animate={{ opacity: 1, x: 0 }}\n                        transition={{ delay: index * 0.1 }}\n                        className={`p-4 rounded-xl border transition-all duration-200 ${\n                          status.color === \"green\"\n                            ? \"bg-green-50 border-green-200\"\n                            : status.color === \"yellow\"\n                              ? \"bg-yellow-50 border-yellow-200\"\n                              : status.color === \"red\"\n                                ? \"bg-red-50 border-red-200\"\n                                : \"bg-blue-50 border-blue-200\"\n                        }`}\n                      >\n                        <div className=\"flex items-center justify-between mb-2\">\n                          <span className=\"font-bold text-slate-800\">\n                            {formatAppointmentTime(appointment.fecha_hora)}\n                          </span>\n                          <span\n                            className={`text-xs px-2 py-1 rounded-full ${\n                              status.color === \"green\"\n                                ? \"bg-green-100 text-green-800\"\n                                : status.color === \"yellow\"\n                                  ? \"bg-yellow-100 text-yellow-800\"\n                                  : status.color === \"red\"\n                                    ? \"bg-red-100 text-red-800\"\n                                    : \"bg-blue-100 text-blue-800\"\n                            }`}\n                          >\n                            {status.text}\n                          </span>\n                        </div>\n                        <h4 className=\"font-semibold text-slate-800 mb-1\">\n                          {appointment.paciente_nombre}\n                        </h4>\n                        <p className=\"text-sm text-slate-600 mb-1\">{appointment.notas || \"Sin notas\"}</p>\n                        <div className=\"flex items-center justify-between\">\n                          <span className=\"text-xs text-slate-500 flex items-center\">\n                            <Clock size={12} className=\"mr-1\" />\n                            30 min\n                          </span>\n                          <div className=\"flex space-x-1\">\n                            {appointment.estado_id !== 3 && appointment.estado_id !== 5 && (\n                              <>\n                                <motion.button\n                                  whileHover={{ scale: 1.05 }}\n                                  onClick={() => handleOpenEditModal(appointment)}\n                                  className=\"px-2 py-1 bg-sky-100 text-sky-800 rounded text-xs hover:bg-sky-200 transition-colors\"\n                                >\n                                  Editar\n                                </motion.button>\n                                {appointment.estado_id === 1 && (\n                                  <motion.button\n                                    whileHover={{ scale: 1.05 }}\n                                    onClick={() => handleConfirmAppointment(appointment)}\n                                    className=\"px-2 py-1 bg-green-100 text-green-800 rounded text-xs hover:bg-green-200 transition-colors\"\n                                  >\n                                    Confirmar\n                                  </motion.button>\n                                )}\n                              </>\n                            )}\n                          </div>\n                        </div>\n                      </motion.div>\n                    )\n                  })\n                )}\n              </div>\n            </motion.div>\n          </div>\n        </main>\n      </div>\n\n      {/* Modal de todas las citas */}\n      {showAllAppointments && (\n        <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-black/40\">\n          <div className=\"bg-white rounded-2xl shadow-2xl p-6 max-w-2xl w-full relative\">\n            <button\n              className=\"absolute top-3 right-3 text-slate-500 hover:text-red-500 text-xl\"\n              onClick={() => setShowAllAppointments(false)}\n            >\n              &times;\n            </button>\n            <h2 className=\"text-xl font-bold text-slate-800 mb-4\">Todas las citas</h2>\n            <div className=\"max-h-[60vh] overflow-y-auto divide-y divide-slate-100\">\n              {appointments\n                .slice()\n                .sort((a, b) => new Date(a.fecha_hora) - new Date(b.fecha_hora))\n                .map((appointment) => {\n                  const status = getAppointmentStatus(appointment.estado_id)\n                  return (\n                    <div key={appointment.cita_id} className=\"py-3 flex flex-col md:flex-row md:items-center md:justify-between gap-2\">\n                      <div>\n                        <span className=\"font-semibold text-slate-800 mr-2\">\n                          {formatAppointmentTime(appointment.fecha_hora)}\n                        </span>\n                        <span className=\"text-slate-600\">{new Date(appointment.fecha_hora).toLocaleDateString('es-ES')}</span>\n                        <span className=\"ml-2 text-sky-700 font-medium\">{appointment.paciente_nombre}</span>\n                      </div>\n                      <div className=\"flex items-center gap-2\">\n                        <span className={`text-xs px-2 py-1 rounded-full ${\n                          status.color === \"green\"\n                            ? \"bg-green-100 text-green-800\"\n                            : status.color === \"yellow\"\n                              ? \"bg-yellow-100 text-yellow-800\"\n                              : status.color === \"red\"\n                                ? \"bg-red-100 text-red-800\"\n                                : \"bg-blue-100 text-blue-800\"\n                        }`}>\n                          {status.text}\n                        </span>\n                        <span className=\"text-xs text-slate-500\">{appointment.notas || \"Sin notas\"}</span>\n                      </div>\n                    </div>\n                  )\n                })}\n              {appointments.length === 0 && (\n                <div className=\"text-center text-slate-500 py-8\">No hay citas registradas</div>\n              )}\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Add this new modal component before the closing div of the main component */}\n      {showNewAppointmentModal && (\n        <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-black/40\">\n          <div className=\"bg-white rounded-2xl shadow-2xl p-6 max-w-2xl w-full relative\">\n            <button\n              className=\"absolute top-3 right-3 text-slate-500 hover:text-red-500\"\n              onClick={() => setShowNewAppointmentModal(false)}\n            >\n              <X size={24} />\n            </button>\n            \n            <h2 className=\"text-xl font-bold text-slate-800 mb-4\">Nueva Cita</h2>\n            \n            <form onSubmit={handleCreateAppointment} className=\"space-y-4\">\n              <div>\n                <label className=\"block text-sm font-medium text-slate-700 mb-1\">\n                  Paciente\n                </label>\n                <select\n                  value={newAppointment.paciente_id}\n                  onChange={(e) => setNewAppointment({...newAppointment, paciente_id: e.target.value})}\n                  className=\"w-full px-3 py-2 border border-slate-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-sky-500 text-slate-800\"\n                  required\n                >\n                  <option value=\"\">Seleccionar paciente</option>\n                  {loadingPatients ? (\n                    <option disabled>Cargando pacientes...</option>\n                  ) : (\n                    patients.map((patient) => (\n                      <option key={patient.paciente_id} value={patient.paciente_id}>\n                        {patient.primer_nombre} {patient.apellido_paterno}\n                      </option>\n                    ))\n                  )}\n                </select>\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-slate-700 mb-1\">\n                  Fecha y Hora\n                </label>\n                <input\n                  type=\"datetime-local\"\n                  value={newAppointment.fecha_hora}\n                  onChange={(e) => setNewAppointment({...newAppointment, fecha_hora: e.target.value})}\n                  className=\"w-full px-3 py-2 border border-slate-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-sky-500 text-slate-800\"\n                  required\n                />\n                <p className=\"text-xs text-slate-500 mt-1\">\n                  Horario disponible: 8:00 AM - 8:00 PM\n                </p>\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-slate-700 mb-1\">\n                  Notas\n                </label>\n                <textarea\n                  value={newAppointment.notas}\n                  onChange={(e) => setNewAppointment({...newAppointment, notas: e.target.value})}\n                  className=\"w-full px-3 py-2 border border-slate-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-sky-500 text-slate-800\"\n                  rows=\"3\"\n                  placeholder=\"Agregar notas sobre la cita...\"\n                />\n              </div>\n\n              {formError && (\n                <div className=\"text-red-500 text-sm\">{formError}</div>\n              )}\n\n              <div className=\"flex justify-end space-x-3\">\n                <button\n                  type=\"button\"\n                  onClick={() => setShowNewAppointmentModal(false)}\n                  className=\"px-4 py-2 text-slate-600 hover:text-slate-800 transition-colors\"\n                >\n                  Cancelar\n                </button>\n                <button\n                  type=\"submit\"\n                  className=\"px-4 py-2 bg-sky-500 text-white rounded-lg hover:bg-sky-600 transition-colors\"\n                >\n                  Crear Cita\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      )}\n\n      {/* Add the edit appointment modal before the closing div of the main component */}\n      {showEditAppointmentModal && editingAppointment && (\n        <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-black/40\">\n          <div className=\"bg-white rounded-2xl shadow-2xl p-6 max-w-2xl w-full relative\">\n            <button\n              className=\"absolute top-3 right-3 text-slate-500 hover:text-red-500\"\n              onClick={() => {\n                setShowEditAppointmentModal(false)\n                setEditingAppointment(null)\n              }}\n            >\n              <X size={24} />\n            </button>\n            \n            <h2 className=\"text-xl font-bold text-slate-800 mb-4\">Editar Cita</h2>\n            \n            <form onSubmit={handleEditAppointment} className=\"space-y-4\">\n              <div>\n                <label className=\"block text-sm font-medium text-slate-700 mb-1\">\n                  Paciente\n                </label>\n                <select\n                  value={editingAppointment.paciente_id}\n                  onChange={(e) => setEditingAppointment({...editingAppointment, paciente_id: e.target.value})}\n                  className=\"w-full px-3 py-2 border border-slate-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-sky-500 text-slate-800\"\n                  required\n                >\n                  {patients.map((patient) => (\n                    <option key={patient.paciente_id} value={patient.paciente_id}>\n                      {patient.primer_nombre} {patient.apellido_paterno}\n                    </option>\n                  ))}\n                </select>\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-slate-700 mb-1\">\n                  Fecha y Hora\n                </label>\n                <input\n                  type=\"datetime-local\"\n                  value={editingAppointment.fecha_hora}\n                  onChange={(e) => setEditingAppointment({...editingAppointment, fecha_hora: e.target.value})}\n                  className=\"w-full px-3 py-2 border border-slate-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-sky-500 text-slate-800\"\n                  required\n                />\n                <p className=\"text-xs text-slate-500 mt-1\">\n                  Horario disponible: 8:00 AM - 8:00 PM\n                </p>\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-slate-700 mb-1\">\n                  Estado\n                </label>\n                <select\n                  value={editingAppointment.estado_id}\n                  onChange={(e) => setEditingAppointment({...editingAppointment, estado_id: parseInt(e.target.value)})}\n                  className=\"w-full px-3 py-2 border border-slate-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-sky-500 text-slate-800\"\n                  required\n                >\n                  <option value={1}>Programada</option>\n                  <option value={2}>Confirmada</option>\n                  <option value={3}>Cancelada</option>\n                  <option value={4}>Completada</option>\n                  <option value={5}>No asistió</option>\n                </select>\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-slate-700 mb-1\">\n                  Notas\n                </label>\n                <textarea\n                  value={editingAppointment.notas}\n                  onChange={(e) => setEditingAppointment({...editingAppointment, notas: e.target.value})}\n                  className=\"w-full px-3 py-2 border border-slate-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-sky-500 text-slate-800\"\n                  rows=\"3\"\n                  placeholder=\"Agregar notas sobre la cita...\"\n                />\n              </div>\n\n              {formError && (\n                <div className=\"text-red-500 text-sm\">{formError}</div>\n              )}\n\n              <div className=\"flex justify-end space-x-3\">\n                <button\n                  type=\"button\"\n                  onClick={() => {\n                    setShowEditAppointmentModal(false)\n                    setEditingAppointment(null)\n                  }}\n                  className=\"px-4 py-2 text-slate-600 hover:text-slate-800 transition-colors\"\n                >\n                  Cancelar\n                </button>\n                <button\n                  type=\"submit\"\n                  className=\"px-4 py-2 bg-sky-500 text-white rounded-lg hover:bg-sky-600 transition-colors\"\n                >\n                  Guardar Cambios\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      )}\n    </div>\n  )\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 1874, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}