{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":["file:///home/senorbuen0/ISC/sem6/bd/proyecto/citasmedicas_db/app/dashboard/patient/calendar/page.jsx"],"sourcesContent":["\"use client\"\n\nimport { useState, useEffect } from \"react\"\nimport { motion } from \"framer-motion\"\nimport {\n  Calendar,\n  FileText,\n  Bell,\n  Search,\n  Clock,\n  User,\n  LogOut,\n  X,\n  Check,\n  AlertCircle,\n  ChevronLeft,\n  ChevronRight,\n} from \"lucide-react\"\nimport Link from \"next/link\"\nimport { useRouter } from \"next/navigation\"\n\nexport default function PatientCalendar() {\n  const router = useRouter()\n  const [selectedDate, setSelectedDate] = useState(null)\n  const [showAppointmentModal, setShowAppointmentModal] = useState(false)\n  const [appointmentReason, setAppointmentReason] = useState(\"\")\n  const [selectedTime, setSelectedTime] = useState(\"\")\n  const [appointments, setAppointments] = useState([])\n  const [loading, setLoading] = useState(true)\n  const [error, setError] = useState(null)\n  const [today, setToday] = useState(null)\n  const [patientInfo, setPatientInfo] = useState(null)\n  const [currentMonth, setCurrentMonth] = useState(new Date())\n  const [showMonthPicker, setShowMonthPicker] = useState(false)\n  const [showYearPicker, setShowYearPicker] = useState(false)\n  const [showDeleteModal, setShowDeleteModal] = useState(false)\n  const [appointmentToDelete, setAppointmentToDelete] = useState(null)\n\n  const handleLogout = () => {\n    sessionStorage.clear()\n    router.push('/login')\n  }\n\n  const fetchPatientInfo = async () => {\n    try {\n      const patientId = sessionStorage.getItem('user_id')\n      \n      if (!patientId) {\n        throw new Error('No se encontró información de sesión. Por favor, inicia sesión nuevamente.')\n      }\n      \n      // Obtener información del paciente incluyendo su doctor asignado\n      const patientResponse = await fetch(`/api/pacientes?pacienteId=${patientId}`)\n      if (!patientResponse.ok) throw new Error('Error al cargar información del paciente')\n      const patientData = await patientResponse.json()\n      setPatientInfo(patientData)\n      \n      // Después obtener las citas\n      await fetchAppointments(patientId)\n    } catch (error) {\n      setError(error.message)\n      setLoading(false)\n    }\n  }\n\n  const fetchAppointments = async (patientId = null) => {\n    try {\n      setLoading(true)\n      \n      const patientIdToUse = patientId || sessionStorage.getItem('user_id')\n      \n      if (!patientIdToUse) {\n        throw new Error('No se encontró información de sesión.')\n      }\n      \n      const response = await fetch(`/api/citas?pacienteId=${patientIdToUse}`)\n      if (!response.ok) throw new Error('Error al cargar las citas')\n      const data = await response.json()\n      \n      // Asegurarnos de que las fechas se procesen correctamente\n      const processedData = data.map(appointment => ({\n        ...appointment,\n        fecha_hora: new Date(appointment.fecha_hora).toISOString()\n      }))\n      \n      setAppointments(processedData)\n    } catch (error) {\n      setError(error.message)\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  useEffect(() => {\n    setToday(new Date())\n    fetchPatientInfo()\n  }, [])\n\n  const handleDateSelect = (day) => {\n    const date = new Date(currentMonth.getFullYear(), currentMonth.getMonth(), day)\n      setSelectedDate(date)\n      setShowAppointmentModal(false)\n    }\n\n  const getAppointmentsForSelectedDate = () => {\n    if (!selectedDate) return []\n    \n    return appointments.filter(appointment => {\n      const appointmentDate = new Date(appointment.fecha_hora)\n      return (\n        appointmentDate.getDate() === selectedDate.getDate() &&\n        appointmentDate.getMonth() === selectedDate.getMonth() &&\n        appointmentDate.getFullYear() === selectedDate.getFullYear()\n      )\n    })\n  }\n\n  const formatTime = (dateString) => {\n    const date = new Date(dateString)\n    return date.toLocaleTimeString('es-ES', { \n      hour: '2-digit', \n      minute: '2-digit'\n    })\n  }\n\n  const formatDate = (date) => {\n    return date.toLocaleDateString('es-ES', {\n      weekday: 'long',\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric'\n    })\n  }\n\n  const handleAppointmentCancel = async (appointmentId) => {\n    try {\n      const response = await fetch(`/api/citas?citaId=${appointmentId}`, {\n        method: 'DELETE'\n      })\n      if (!response.ok) throw new Error('Error al cancelar la cita')\n      await fetchAppointments()\n    } catch (error) {\n      setError(error.message)\n    }\n  }\n\n  const handleNewAppointment = async () => {\n    if (appointmentReason && selectedTime && selectedDate && patientInfo) {\n      try {\n        // Obtener ID del paciente desde sessionStorage\n        const patientId = sessionStorage.getItem('user_id')\n        \n        if (!patientId) {\n          throw new Error('No se encontró información de sesión.')\n        }\n\n        if (!patientInfo.doctor_id) {\n          throw new Error('No tienes un doctor asignado. Contacta al administrador.')\n        }\n        \n        const response = await fetch('/api/citas', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            paciente_id: patientId,\n            doctor_id: patientInfo.doctor_id,\n            fecha_hora: `${selectedDate.toISOString().split('T')[0]} ${selectedTime}:00`,\n            estado_id: 1, // Estado \"Programada\"\n            notas: appointmentReason\n          })\n        })\n\n        if (!response.ok) {\n          const error = await response.json()\n          throw new Error(error.error || 'Error al crear la cita')\n        }\n\n        // Forzar una recarga completa de las citas\n        await fetchAppointments()\n        setShowAppointmentModal(false)\n        setAppointmentReason(\"\")\n        setSelectedTime(\"\")\n      } catch (error) {\n        setError(error.message)\n      }\n    }\n  }\n\n  const availableTimeSlots = [\n    \"09:00\", \"09:30\", \"10:00\", \"10:30\", \"11:00\", \"11:30\",\n    \"14:00\", \"14:30\", \"15:00\", \"15:30\", \"16:00\", \"16:30\"\n  ]\n\n  const containerVariants = {\n    hidden: { opacity: 0 },\n    visible: {\n      opacity: 1,\n      transition: {\n        duration: 0.6,\n        staggerChildren: 0.1,\n      },\n    },\n  }\n\n  const itemVariants = {\n    hidden: { opacity: 0, y: 20 },\n    visible: {\n      opacity: 1,\n      y: 0,\n      transition: { duration: 0.5 },\n    },\n  }\n\n  const monthNames = [\n    \"Enero\", \"Febrero\", \"Marzo\", \"Abril\", \"Mayo\", \"Junio\",\n    \"Julio\", \"Agosto\", \"Septiembre\", \"Octubre\", \"Noviembre\", \"Diciembre\"\n  ]\n\n  const navigateMonth = (direction) => {\n    const newMonth = new Date(currentMonth)\n    newMonth.setMonth(currentMonth.getMonth() + direction)\n    setCurrentMonth(newMonth)\n  }\n\n  const navigateYear = (direction) => {\n    const newMonth = new Date(currentMonth)\n    newMonth.setFullYear(currentMonth.getFullYear() + direction)\n    setCurrentMonth(newMonth)\n  }\n\n  const selectMonth = (monthIndex) => {\n    const newMonth = new Date(currentMonth)\n    newMonth.setMonth(monthIndex)\n    setCurrentMonth(newMonth)\n    setShowMonthPicker(false)\n  }\n\n  const selectYear = (year) => {\n    const newMonth = new Date(currentMonth)\n    newMonth.setFullYear(year)\n    setCurrentMonth(newMonth)\n    setShowYearPicker(false)\n  }\n\n  const getYearRange = () => {\n    const currentYear = new Date().getFullYear()\n    return Array.from({ length: 10 }, (_, i) => currentYear + i)\n  }\n\n  const getDaysInMonth = (date) => {\n    const year = date.getFullYear()\n    const month = date.getMonth()\n    const firstDay = new Date(year, month, 1)\n    const lastDay = new Date(year, month + 1, 0)\n    const daysInMonth = lastDay.getDate()\n    const startingDayOfWeek = firstDay.getDay()\n\n    const days = []\n\n    // Días del mes anterior\n    for (let i = startingDayOfWeek - 1; i >= 0; i--) {\n      const prevDate = new Date(year, month, -i)\n      days.push({ date: prevDate, isCurrentMonth: false })\n    }\n\n    // Días del mes actual\n    for (let day = 1; day <= daysInMonth; day++) {\n      days.push({ date: new Date(year, month, day), isCurrentMonth: true })\n    }\n\n    // Días del mes siguiente para completar la grilla\n    const remainingDays = 42 - days.length\n    for (let day = 1; day <= remainingDays; day++) {\n      days.push({ date: new Date(year, month + 1, day), isCurrentMonth: false })\n    }\n\n    return days\n  }\n\n  const checkIfToday = (date) => {\n    const today = new Date()\n    return (\n      date.getDate() === today.getDate() &&\n      date.getMonth() === today.getMonth() &&\n      date.getFullYear() === today.getFullYear()\n    )\n  }\n\n  const checkIfSelected = (date) => {\n    if (!selectedDate) return false\n    return (\n      date.getDate() === selectedDate.getDate() &&\n      date.getMonth() === selectedDate.getMonth() &&\n      date.getFullYear() === selectedDate.getFullYear()\n    )\n  }\n\n  const handleMonthPicker = () => {\n    setShowMonthPicker((prev) => !prev)\n    setShowYearPicker(false)\n  }\n\n  const handleYearPicker = () => {\n    setShowYearPicker((prev) => !prev)\n    setShowMonthPicker(false)\n  }\n\n  // Días con citas en el mes actual\n  const daysWithAppointments = appointments\n    .filter(app => {\n      const date = new Date(app.fecha_hora)\n      return (\n        date.getMonth() === currentMonth.getMonth() &&\n        date.getFullYear() === currentMonth.getFullYear()\n      )\n    })\n    .map(app => {\n      const date = new Date(app.fecha_hora)\n      return {\n        day: date.getDate(),\n        month: date.getMonth(),\n        year: date.getFullYear()\n      }\n    })\n\n  const handleDeleteClick = (appointment) => {\n    setAppointmentToDelete(appointment)\n    setShowDeleteModal(true)\n  }\n\n  const handleConfirmDelete = async () => {\n    if (!appointmentToDelete) return\n\n    try {\n      const response = await fetch(`/api/citas?citaId=${appointmentToDelete.cita_id}`, {\n        method: 'DELETE'\n      })\n      if (!response.ok) throw new Error('Error al cancelar la cita')\n      await fetchAppointments()\n      setShowDeleteModal(false)\n      setAppointmentToDelete(null)\n    } catch (error) {\n      setError(error.message)\n    }\n  }\n\n  if (loading) {\n    return <div className=\"min-h-screen flex items-center justify-center\">\n      <div className=\"text-slate-600\">Cargando calendario...</div>\n    </div>\n  }\n\n  if (error) {\n    return <div className=\"min-h-screen flex items-center justify-center\">\n      <div className=\"text-red-600\">Error: {error}</div>\n    </div>\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-sky-50 via-blue-50 to-indigo-100\">\n      {/* Header */}\n      <motion.header\n        initial={{ y: -50, opacity: 0 }}\n        animate={{ y: 0, opacity: 1 }}\n        className=\"bg-white/80 backdrop-blur-lg border-b border-sky-200 px-6 py-4\"\n      >\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex items-center space-x-4\">\n            <div className=\"w-10 h-10 bg-gradient-to-br from-sky-400 to-blue-500 rounded-xl flex items-center justify-center\">\n              <User className=\"text-white\" size={20} />\n            </div>\n            <div>\n              <h1 className=\"text-xl font-bold text-slate-800\">MediCare Pro</h1>\n              <p className=\"text-sm text-slate-600\">Paciente</p>\n            </div>\n          </div>\n\n          <div className=\"flex items-center space-x-4\">\n            <motion.button\n              whileHover={{ scale: 1.05 }}\n              className=\"p-2 text-slate-600 hover:text-sky-600 transition-colors\"\n            >\n              <Bell size={20} />\n            </motion.button>\n            <motion.button\n              whileHover={{ scale: 1.05 }}\n              onClick={handleLogout}\n              className=\"p-2 text-slate-600 hover:text-red-600 transition-colors\"\n            >\n              <LogOut size={20} />\n            </motion.button>\n          </div>\n        </div>\n      </motion.header>\n\n      <div className=\"flex\">\n        {/* Sidebar */}\n        <motion.aside\n          initial={{ x: -100, opacity: 0 }}\n          animate={{ x: 0, opacity: 1 }}\n          className=\"w-64 bg-white/60 backdrop-blur-lg border-r border-sky-200 min-h-screen p-6\"\n        >\n          <nav className=\"space-y-4\">\n            <motion.a\n              href=\"/dashboard/patient\"\n              whileHover={{ scale: 1.02 }}\n              whileTap={{ scale: 0.98 }}\n              className=\"w-full flex items-center space-x-3 px-4 py-3 rounded-xl text-slate-600 hover:bg-sky-50 transition-all duration-300\"\n            >\n              <User size={20} />\n              <span className=\"font-medium\">Dashboard</span>\n            </motion.a>\n\n            <motion.a\n              href=\"/dashboard/patient/calendar\"\n              whileHover={{ scale: 1.02 }}\n              whileTap={{ scale: 0.98 }}\n              className=\"w-full flex items-center space-x-3 px-4 py-3 rounded-xl bg-sky-100 text-sky-700 shadow-sm\"\n            >\n              <Calendar size={20} />\n              <span className=\"font-medium\">Calendario</span>\n            </motion.a>\n\n            <motion.a\n              href=\"/dashboard/patient/records\"\n              whileHover={{ scale: 1.02 }}\n              whileTap={{ scale: 0.98 }}\n              className=\"w-full flex items-center space-x-3 px-4 py-3 rounded-xl text-slate-600 hover:bg-sky-50 transition-all duration-300\"\n            >\n              <FileText size={20} />\n              <span className=\"font-medium\">Expediente</span>\n            </motion.a>\n          </nav>\n        </motion.aside>\n\n        {/* Main Content */}\n        <main className=\"flex-1 p-6\">\n          {today ? (\n            <motion.div variants={containerVariants} initial=\"hidden\" animate=\"visible\" className=\"space-y-6\">\n              {/* Calendar Section */}\n              <motion.div\n                variants={itemVariants}\n                className=\"bg-white/80 backdrop-blur-lg rounded-2xl p-6 border border-sky-100 shadow-lg\"\n              >\n                <div className=\"flex items-center justify-between mb-4\">\n                  <h2 className=\"text-xl font-bold text-slate-800 flex items-center\">\n                    <Calendar className=\"mr-2 text-sky-600\" size={24} />\n                    Calendario de Citas\n                  </h2>\n                  <motion.button\n                    whileHover={{ scale: 1.02 }}\n                    whileTap={{ scale: 0.98 }}\n                    onClick={() => setShowAppointmentModal(true)}\n                    className=\"px-4 py-2 bg-sky-500 text-white rounded-lg hover:bg-sky-600 transition-colors\"\n                  >\n                    Agendar Cita\n                  </motion.button>\n                </div>\n\n                {/* Month and Year */}\n                <div className=\"flex items-center justify-center space-x-4 mb-4\">\n                  <div className=\"flex items-center space-x-2\">\n                    <button\n                      onClick={() => navigateMonth(-1)}\n                      className=\"p-2 text-slate-600 hover:text-sky-600 transition-colors\"\n                    >\n                      <ChevronLeft size={20} />\n                    </button>\n                    <div className=\"relative\">\n                      <button\n                        onClick={handleMonthPicker}\n                        className=\"text-lg font-semibold text-slate-800 hover:text-sky-600 transition-colors\"\n                      >\n                        {monthNames[currentMonth.getMonth()].charAt(0).toUpperCase() + monthNames[currentMonth.getMonth()].slice(1)}\n                      </button>\n                      {showMonthPicker && (\n                        <div className=\"absolute top-full left-0 mt-2 min-w-[120px] bg-white rounded-lg shadow-xl border border-sky-100 p-2 z-30\">\n                          <div className=\"grid grid-cols-3 gap-2\">\n                            {monthNames.map((month, index) => (\n                              <button\n                                key={month}\n                                onClick={() => selectMonth(index)}\n                                className=\"px-1 py-1 text-sm text-slate-600 hover:bg-sky-50 hover:text-sky-600 rounded-md transition-colors w-full text-left\"\n                              >\n                                {month.slice(0, 3)}\n                              </button>\n                            ))}\n                          </div>\n                        </div>\n                      )}\n                    </div>\n                    <button\n                      onClick={() => navigateMonth(1)}\n                      className=\"p-2 text-slate-600 hover:text-sky-600 transition-colors\"\n                    >\n                      <ChevronRight size={20} />\n                    </button>\n                  </div>\n                  <div className=\"relative\">\n                    <button\n                      onClick={handleYearPicker}\n                      className=\"text-lg font-semibold text-slate-800 hover:text-sky-600 transition-colors\"\n                    >\n                      {currentMonth.getFullYear()}\n                    </button>\n                    {showYearPicker && (\n                      <div className=\"absolute top-full left-0 mt-2 min-w-[100px] bg-white rounded-lg shadow-xl border border-sky-100 p-2 z-30\">\n                        <div className=\"grid grid-cols-2 gap-2\">\n                          {getYearRange().map((year) => (\n                            <button\n                              key={year}\n                              onClick={() => selectYear(year)}\n                              className=\"px-1 py-1 text-sm text-slate-600 hover:bg-sky-50 hover:text-sky-600 rounded-md transition-colors w-full text-left\"\n                            >\n                              {year}\n                            </button>\n                          ))}\n                        </div>\n                      </div>\n                    )}\n                  </div>\n                </div>\n\n                {/* Calendar Grid */}\n                <div className=\"grid grid-cols-7 gap-2\">\n                  {getDaysInMonth(currentMonth).map((day, index) => {\n                    const isToday = checkIfToday(day.date)\n                    const isSelected = checkIfSelected(day.date)\n                    const hasAppointment = daysWithAppointments.some(app => \n                      app.day === day.date.getDate() &&\n                      app.month === day.date.getMonth() &&\n                      app.year === day.date.getFullYear()\n                    )\n                    const isPast = day.date < new Date() && !isToday\n\n                    let dayClassName = \"bg-slate-50 text-slate-700\"\n\n                    if (isToday) {\n                      dayClassName = \"bg-purple-500 text-white font-bold\"\n                    } else if (hasAppointment && isPast) {\n                      dayClassName = \"bg-orange-200 text-orange-800\"\n                    } else if (hasAppointment) {\n                      dayClassName = \"bg-green-100 text-green-700\"\n                    }\n\n                    return (\n                      <motion.button\n                        key={index}\n                        whileHover={{ scale: 1.05 }}\n                        onClick={() => handleDateSelect(day.date.getDate())}\n                        className={`p-4 rounded-lg text-center ${dayClassName} ${\n                          !day.isCurrentMonth ? \"opacity-50\" : \"\"\n                        } ${isSelected ? \"ring-2 ring-sky-500\" : \"\"}`}\n                      >\n                        {day.date.getDate()}\n                      </motion.button>\n                    )\n                  })}\n                </div>\n\n                {/* Color Legend */}\n                <div className=\"mt-6 text-sm text-slate-700\">\n                  <h4 className=\"font-semibold mb-2\">Simbología de Colores:</h4>\n                  <div className=\"flex flex-wrap gap-4\">\n                    <div className=\"flex items-center\">\n                      <span className=\"block w-4 h-4 bg-purple-500 rounded-full mr-2\"></span> Día Actual\n                    </div>\n                    <div className=\"flex items-center\">\n                      <span className=\"block w-4 h-4 bg-orange-200 rounded-full mr-2\"></span> Cita Pasada\n                    </div>\n                    <div className=\"flex items-center\">\n                      <span className=\"block w-4 h-4 bg-green-100 rounded-full mr-2\"></span> Cita Futura\n                    </div>\n                  </div>\n                </div>\n\n                {/* Selected Date Appointments */}\n                {selectedDate && (\n                  <motion.div\n                    initial={{ opacity: 0, y: 20 }}\n                    animate={{ opacity: 1, y: 0 }}\n                    className=\"mt-6 bg-white/80 backdrop-blur-lg rounded-xl p-6 border border-sky-100\"\n                  >\n                    <h3 className=\"text-lg font-semibold text-slate-800 mb-4\">\n                      Citas para {formatDate(selectedDate)}\n                    </h3>\n                    <div className=\"space-y-4\">\n                      {getAppointmentsForSelectedDate().length > 0 ? (\n                        getAppointmentsForSelectedDate().map(appointment => (\n                          <motion.div\n                            key={appointment.cita_id}\n                            initial={{ opacity: 0, y: 10 }}\n                            animate={{ opacity: 1, y: 0 }}\n                            className=\"bg-sky-50 border border-sky-200 rounded-lg p-4\"\n                          >\n                            <div className=\"flex justify-between items-start\">\n                              <div>\n                                <p className=\"text-slate-800 font-medium\">\n                                  {formatTime(appointment.fecha_hora)} - Dr. {appointment.doctor_apellido}\n                                </p>\n                                <p className=\"text-slate-600 text-sm mt-1\">\n                                  {appointment.notas}\n                                </p>\n                                <p className=\"text-slate-500 text-sm mt-2\">\n                                  Estado: {appointment.estado_nombre}\n                                </p>\n                              </div>\n                              {appointment.estado_id === 1 && (\n                                <div className=\"flex space-x-2\">\n                                  <motion.button\n                                    whileHover={{ scale: 1.1 }}\n                                    whileTap={{ scale: 0.9 }}\n                                    onClick={() => handleDeleteClick(appointment)}\n                                    className=\"p-2 text-red-600 hover:text-red-800 transition-colors\"\n                                  >\n                                    <X size={16} />\n                                  </motion.button>\n                                </div>\n                              )}\n                            </div>\n                          </motion.div>\n                        ))\n                      ) : (\n                        <div className=\"text-center py-6\">\n                          <p className=\"text-slate-600\">No hay citas programadas para este día</p>\n                          <motion.button\n                            whileHover={{ scale: 1.02 }}\n                            whileTap={{ scale: 0.98 }}\n                            onClick={() => setShowAppointmentModal(true)}\n                            className=\"mt-4 px-4 py-2 bg-sky-500 text-white rounded-lg hover:bg-sky-600 transition-colors\"\n                          >\n                            Agendar Cita\n                          </motion.button>\n                        </div>\n                      )}\n                    </div>\n                  </motion.div>\n                )}\n              </motion.div>\n            </motion.div>\n          ) : (\n            <div className=\"text-center text-slate-600\">Cargando calendario...</div>\n          )}\n        </main>\n      </div>\n\n      {/* Appointment Modal */}\n      {showAppointmentModal && today && (\n        <motion.div\n          initial={{ opacity: 0 }}\n          animate={{ opacity: 1 }}\n          className=\"fixed inset-0 bg-black/50 flex items-center justify-center p-4\"\n        >\n          <motion.div\n            initial={{ scale: 0.9, opacity: 0 }}\n            animate={{ scale: 1, opacity: 1 }}\n            className=\"bg-white rounded-2xl p-6 w-full max-w-md\"\n          >\n            <div className=\"flex justify-between items-center mb-4\">\n              <h3 className=\"text-xl font-bold text-slate-800\">Agendar Nueva Cita</h3>\n              <motion.button\n                whileHover={{ scale: 1.1 }}\n                whileTap={{ scale: 0.9 }}\n                onClick={() => setShowAppointmentModal(false)}\n                className=\"p-2 text-slate-600 hover:text-slate-800\"\n              >\n                <X size={20} />\n              </motion.button>\n            </div>\n\n            <div className=\"space-y-4\">\n              {/* Fecha seleccionada */}\n              <div>\n                <label className=\"block text-sm font-medium text-slate-700 mb-1\">\n                  Fecha seleccionada\n                </label>\n                <div className=\"flex items-center space-x-2\">\n                  <input\n                    type=\"date\"\n                    value={selectedDate?.toISOString().split('T')[0] || ''}\n                    onChange={(e) => setSelectedDate(new Date(e.target.value))}\n                    min={new Date().toISOString().split('T')[0]}\n                    className=\"p-2 bg-sky-50/50 border border-sky-200 rounded-lg focus:outline-none focus:ring-2 focus:ring-sky-400 focus:border-transparent transition-all duration-300 text-slate-800\"\n                  />\n                  <motion.button\n                    whileHover={{ scale: 1.05 }}\n                    whileTap={{ scale: 0.95 }}\n                    onClick={() => setShowAppointmentModal(false)}\n                    className=\"p-2 text-sky-600 hover:text-sky-800\"\n                  >\n                    <Calendar size={20} />\n                  </motion.button>\n                </div>\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-slate-700 mb-1\">\n                  Motivo de la Consulta\n                </label>\n                <textarea\n                  value={appointmentReason}\n                  onChange={(e) => setAppointmentReason(e.target.value)}\n                  className=\"w-full h-24 p-3 bg-sky-50/50 border border-sky-200 rounded-lg focus:outline-none focus:ring-2 focus:ring-sky-400 focus:border-transparent transition-all duration-300 text-slate-800 placeholder-slate-400 resize-none\"\n                  placeholder=\"Describe el motivo de tu consulta...\"\n                />\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-slate-700 mb-1\">\n                  Horario Disponible\n                </label>\n                <div className=\"grid grid-cols-3 gap-2\">\n                  {availableTimeSlots.map((time) => (\n                    <motion.button\n                      key={time}\n                      whileHover={{ scale: 1.05 }}\n                      whileTap={{ scale: 0.95 }}\n                      onClick={() => setSelectedTime(time)}\n                      className={`p-2 rounded-lg text-sm ${\n                        selectedTime === time\n                          ? \"bg-sky-500 text-white\"\n                          : \"bg-sky-50 text-slate-700 hover:bg-sky-100\"\n                      }`}\n                    >\n                      {time}\n                    </motion.button>\n                  ))}\n                </div>\n              </div>\n\n              <motion.button\n                whileHover={{ scale: 1.02 }}\n                whileTap={{ scale: 0.98 }}\n                onClick={handleNewAppointment}\n                disabled={!appointmentReason || !selectedTime || !selectedDate}\n                className=\"w-full py-3 bg-sky-500 text-white rounded-lg hover:bg-sky-600 transition-colors disabled:opacity-50 disabled:cursor-not-allowed\"\n              >\n                Confirmar Cita\n              </motion.button>\n            </div>\n          </motion.div>\n        </motion.div>\n      )}\n\n      {/* Delete Confirmation Modal */}\n      {showDeleteModal && appointmentToDelete && (\n        <motion.div\n          initial={{ opacity: 0 }}\n          animate={{ opacity: 1 }}\n          className=\"fixed inset-0 bg-black/50 flex items-center justify-center p-4 z-50\"\n        >\n          <motion.div\n            initial={{ scale: 0.9, opacity: 0 }}\n            animate={{ scale: 1, opacity: 1 }}\n            className=\"bg-white rounded-2xl p-6 w-full max-w-md\"\n          >\n            <div className=\"flex justify-between items-center mb-4\">\n              <h3 className=\"text-xl font-bold text-slate-800\">Confirmar Cancelación</h3>\n              <motion.button\n                whileHover={{ scale: 1.1 }}\n                whileTap={{ scale: 0.9 }}\n                onClick={() => {\n                  setShowDeleteModal(false)\n                  setAppointmentToDelete(null)\n                }}\n                className=\"p-2 text-slate-600 hover:text-slate-800\"\n              >\n                <X size={20} />\n              </motion.button>\n            </div>\n\n            <div className=\"space-y-4\">\n              <p className=\"text-slate-600\">\n                ¿Estás seguro de que deseas cancelar la cita con el Dr. {appointmentToDelete.doctor_apellido}{' '}\n                programada para el {formatDate(new Date(appointmentToDelete.fecha_hora))} \n                a las {formatTime(appointmentToDelete.fecha_hora)}?\n              </p>\n\n              <div className=\"flex justify-end space-x-3\">\n                <motion.button\n                  whileHover={{ scale: 1.02 }}\n                  whileTap={{ scale: 0.98 }}\n                  onClick={() => {\n                    setShowDeleteModal(false)\n                    setAppointmentToDelete(null)\n                  }}\n                  className=\"px-4 py-2 text-slate-600 hover:text-slate-800 transition-colors\"\n                >\n                  No, mantener\n                </motion.button>\n                <motion.button\n                  whileHover={{ scale: 1.02 }}\n                  whileTap={{ scale: 0.98 }}\n                  onClick={handleConfirmDelete}\n                  className=\"px-4 py-2 bg-red-500 text-white rounded-lg hover:bg-red-600 transition-colors\"\n                >\n                  Sí, cancelar\n                </motion.button>\n              </div>\n            </div>\n          </motion.div>\n        </motion.div>\n      )}\n    </div>\n  )\n} "],"names":[],"mappings":"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"}},
    {"offset": {"line": 1477, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}