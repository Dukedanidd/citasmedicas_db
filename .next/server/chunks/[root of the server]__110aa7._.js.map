{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 151, "column": 0}, "map": {"version":3,"sources":["file:///home/senorbuen0/ISC/sem6/bd/proyecto/citasmedicas_db/app/api/consultorios/route.ts"],"sourcesContent":["import { NextResponse } from 'next/server';\nimport mysql from 'mysql2/promise';\n\n// Configuraci贸n de la base de datos\nconst dbConfig = {\n  host: process.env.DB_HOST || 'localhost',\n  user: process.env.DB_USER || 'root',\n  password: process.env.DB_PASSWORD || '',\n  database: process.env.DB_NAME || 'clinica_db'\n};\n\n// GET /api/consultorios - Obtener todos los consultorios\nexport async function GET() {\n  console.log('[GET /api/consultorios] Iniciando petici贸n...');\n  let conn;\n  try {\n    console.log('[GET /api/consultorios] Conectando a la base de datos...');\n    conn = await mysql.createConnection(dbConfig);\n    console.log('[GET /api/consultorios] Conexi贸n exitosa');\n\n    // Asignar current_user_id para los triggers\n    await conn.execute('SET @current_user_id = 1');\n    console.log('[GET /api/consultorios] current_user_id asignado');\n\n    console.log('[GET /api/consultorios] Ejecutando consulta SQL...');\n    const [rows] = await conn.execute(`\n      SELECT consultorio_id, nombre\n      FROM consultorios\n      ORDER BY nombre\n    `);\n    console.log('[GET /api/consultorios] Consulta ejecutada. Resultados:', rows);\n\n    return NextResponse.json(rows);\n  } catch (err) {\n    console.error('[GET /api/consultorios] Error:', err);\n    console.error('[GET /api/consultorios] Stack trace:', err.stack);\n    return NextResponse.json(\n      { error: 'Error al obtener los consultorios' },\n      { status: 500 }\n    );\n  } finally {\n    if (conn) {\n      await conn.end();\n      console.log('[GET /api/consultorios] Conexi贸n cerrada');\n    }\n  }\n} "],"names":[],"mappings":";;;AAAA;AACA;;;AAEA,oCAAoC;AACpC,MAAM,WAAW;IACf,MAAM,QAAQ,GAAG,CAAC,OAAO,IAAI;IAC7B,MAAM,QAAQ,GAAG,CAAC,OAAO,IAAI;IAC7B,UAAU,QAAQ,GAAG,CAAC,WAAW,IAAI;IACrC,UAAU,QAAQ,GAAG,CAAC,OAAO,IAAI;AACnC;AAGO,eAAe;IACpB,QAAQ,GAAG,CAAC;IACZ,IAAI;IACJ,IAAI;QACF,QAAQ,GAAG,CAAC;QACZ,OAAO,MAAM,mIAAA,CAAA,UAAK,CAAC,gBAAgB,CAAC;QACpC,QAAQ,GAAG,CAAC;QAEZ,4CAA4C;QAC5C,MAAM,KAAK,OAAO,CAAC;QACnB,QAAQ,GAAG,CAAC;QAEZ,QAAQ,GAAG,CAAC;QACZ,MAAM,CAAC,KAAK,GAAG,MAAM,KAAK,OAAO,CAAC,CAAC;;;;IAInC,CAAC;QACD,QAAQ,GAAG,CAAC,2DAA2D;QAEvE,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;IAC3B,EAAE,OAAO,KAAK;QACZ,QAAQ,KAAK,CAAC,kCAAkC;QAChD,QAAQ,KAAK,CAAC,wCAAwC,IAAI,KAAK;QAC/D,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO;QAAoC,GAC7C;YAAE,QAAQ;QAAI;IAElB,SAAU;QACR,IAAI,MAAM;YACR,MAAM,KAAK,GAAG;YACd,QAAQ,GAAG,CAAC;QACd;IACF;AACF"}},
    {"offset": {"line": 198, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}