{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 143, "column": 0}, "map": {"version":3,"sources":["file:///home/senorbuen0/ISC/sem6/bd/proyecto/citasmedicas_db/database/connection.js"],"sourcesContent":["import mysql from 'mysql2';\n\nconsole.log('[CONNECTION] Inicializando conexión a la base de datos...');\n\n// Configuración de la conexión\nconst connection = mysql.createConnection({\n    host: 'localhost',      // Host de la base de datos\n    port: 3306,\n    user: 'clinica-admin',          // Usuario de MySQL\n    password: 'admin',          // Contraseña de MySQL\n    database: 'clinica_db' // Nombre de la base de datos\n});\n\nconsole.log('[CONNECTION] Configuración de conexión creada');\n\n// Probar la conexión\nconnection.connect((err) => {\n    if (err) {\n        console.error('[CONNECTION] Error al conectar a la base de datos:', err);\n        console.error('[CONNECTION] Stack trace:', err.stack);\n        return;\n    }\n    console.log('[CONNECTION] Conexión exitosa a la base de datos MySQL');\n});\n\n// Manejar errores de conexión\nconnection.on('error', (err) => {\n    console.error('[CONNECTION] Error en la conexión:', err);\n    console.error('[CONNECTION] Stack trace:', err.stack);\n});\n\nconsole.log('[CONNECTION] Exportando conexión...');\n\n// Exportar la conexión para usarla en otros archivos\nexport default connection; "],"names":[],"mappings":";;;AAAA;;AAEA,QAAQ,GAAG,CAAC;AAEZ,+BAA+B;AAC/B,MAAM,aAAa,iIAAA,CAAA,UAAK,CAAC,gBAAgB,CAAC;IACtC,MAAM;IACN,MAAM;IACN,MAAM;IACN,UAAU;IACV,UAAU,aAAa,6BAA6B;AACxD;AAEA,QAAQ,GAAG,CAAC;AAEZ,qBAAqB;AACrB,WAAW,OAAO,CAAC,CAAC;IAChB,IAAI,KAAK;QACL,QAAQ,KAAK,CAAC,sDAAsD;QACpE,QAAQ,KAAK,CAAC,6BAA6B,IAAI,KAAK;QACpD;IACJ;IACA,QAAQ,GAAG,CAAC;AAChB;AAEA,8BAA8B;AAC9B,WAAW,EAAE,CAAC,SAAS,CAAC;IACpB,QAAQ,KAAK,CAAC,sCAAsC;IACpD,QAAQ,KAAK,CAAC,6BAA6B,IAAI,KAAK;AACxD;AAEA,QAAQ,GAAG,CAAC;uCAGG"}},
    {"offset": {"line": 174, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 180, "column": 0}, "map": {"version":3,"sources":["file:///home/senorbuen0/ISC/sem6/bd/proyecto/citasmedicas_db/libs/auth.js"],"sourcesContent":["import connection from '../database/connection';\n\nconsole.log('[AUTH] Importando módulo de autenticación...');\n\nexport async function authenticateUser(email, password) {\n    console.log('[AUTH] Iniciando autenticación para:', email);\n    console.log('[AUTH] Estado de la conexión:', connection ? 'Conexión disponible' : 'Sin conexión');\n\n    try {\n        // Buscamos en la tabla usuarios\n        console.log('[AUTH] Ejecutando consulta SQL...');\n        const query = 'SELECT user_id as id, email, password, role_id FROM usuarios WHERE email = ? AND password = ?';\n        console.log('[AUTH] Query SQL:', query);\n        console.log('[AUTH] Parámetros:', { email, password: '***' });\n\n        const [users] = await connection.promise().query(query, [email, password]);\n\n        console.log('[AUTH] Resultado de la consulta:', users);\n        console.log('[AUTH] Número de resultados:', users.length);\n\n        if (!users || users.length === 0) {\n            console.log('[AUTH] Credenciales incorrectas para:', email);\n            return { error: 'Credenciales incorrectas' };\n        }\n\n        const user = users[0];\n        console.log('[AUTH] Usuario encontrado:', { ...user, password: '***' });\n\n        // Obtener el nombre del rol\n        console.log('[AUTH] Obteniendo nombre del rol...');\n        const [roles] = await connection.promise().query(\n            'SELECT nombre FROM roles WHERE role_id = ?',\n            [user.role_id]\n        );\n        \n        if (!roles || roles.length === 0) {\n            console.log('[AUTH] No se encontró el rol para el usuario');\n            return { error: 'Error en la configuración del usuario' };\n        }\n\n        const rol = roles[0].nombre;\n        console.log('[AUTH] Rol del usuario:', rol);\n\n        // No enviar la contraseña al cliente\n        const { password: _, ...userWithoutPassword } = user;\n\n        console.log('[AUTH] Usuario autenticado:', userWithoutPassword);\n        console.log('[AUTH] Rol del usuario:', rol);\n\n        const redirectPath = getRedirectPath(rol);\n        console.log('[AUTH] Ruta de redirección:', redirectPath);\n\n        return {\n            user: userWithoutPassword,\n            redirectTo: redirectPath\n        };\n    } catch (error) {\n        console.error('[AUTH] Error en la autenticación:', error);\n        console.error('[AUTH] Stack trace:', error.stack);\n        return { error: 'Error en la autenticación' };\n    }\n}\n\nfunction getRedirectPath(rol) {\n    console.log('[AUTH] Obteniendo ruta de redirección para rol:', rol);\n    const path = (() => {\n        switch (rol.toLowerCase()) {\n            case 'admin':\n                return '/dashboard/admin';\n            case 'doctor':\n                return '/dashboard/doctor';\n            case 'paciente':\n                return '/dashboard/patient';\n            default:\n                return '/';\n        }\n    })();\n    console.log('[AUTH] Ruta seleccionada:', path);\n    return path;\n}\n"],"names":[],"mappings":";;;AAAA;;AAEA,QAAQ,GAAG,CAAC;AAEL,eAAe,iBAAiB,KAAK,EAAE,QAAQ;IAClD,QAAQ,GAAG,CAAC,wCAAwC;IACpD,QAAQ,GAAG,CAAC,iCAAiC,wHAAA,CAAA,UAAU,GAAG,wBAAwB;IAElF,IAAI;QACA,gCAAgC;QAChC,QAAQ,GAAG,CAAC;QACZ,MAAM,QAAQ;QACd,QAAQ,GAAG,CAAC,qBAAqB;QACjC,QAAQ,GAAG,CAAC,sBAAsB;YAAE;YAAO,UAAU;QAAM;QAE3D,MAAM,CAAC,MAAM,GAAG,MAAM,wHAAA,CAAA,UAAU,CAAC,OAAO,GAAG,KAAK,CAAC,OAAO;YAAC;YAAO;SAAS;QAEzE,QAAQ,GAAG,CAAC,oCAAoC;QAChD,QAAQ,GAAG,CAAC,gCAAgC,MAAM,MAAM;QAExD,IAAI,CAAC,SAAS,MAAM,MAAM,KAAK,GAAG;YAC9B,QAAQ,GAAG,CAAC,yCAAyC;YACrD,OAAO;gBAAE,OAAO;YAA2B;QAC/C;QAEA,MAAM,OAAO,KAAK,CAAC,EAAE;QACrB,QAAQ,GAAG,CAAC,8BAA8B;YAAE,GAAG,IAAI;YAAE,UAAU;QAAM;QAErE,4BAA4B;QAC5B,QAAQ,GAAG,CAAC;QACZ,MAAM,CAAC,MAAM,GAAG,MAAM,wHAAA,CAAA,UAAU,CAAC,OAAO,GAAG,KAAK,CAC5C,8CACA;YAAC,KAAK,OAAO;SAAC;QAGlB,IAAI,CAAC,SAAS,MAAM,MAAM,KAAK,GAAG;YAC9B,QAAQ,GAAG,CAAC;YACZ,OAAO;gBAAE,OAAO;YAAwC;QAC5D;QAEA,MAAM,MAAM,KAAK,CAAC,EAAE,CAAC,MAAM;QAC3B,QAAQ,GAAG,CAAC,2BAA2B;QAEvC,qCAAqC;QACrC,MAAM,EAAE,UAAU,CAAC,EAAE,GAAG,qBAAqB,GAAG;QAEhD,QAAQ,GAAG,CAAC,+BAA+B;QAC3C,QAAQ,GAAG,CAAC,2BAA2B;QAEvC,MAAM,eAAe,gBAAgB;QACrC,QAAQ,GAAG,CAAC,+BAA+B;QAE3C,OAAO;YACH,MAAM;YACN,YAAY;QAChB;IACJ,EAAE,OAAO,OAAO;QACZ,QAAQ,KAAK,CAAC,qCAAqC;QACnD,QAAQ,KAAK,CAAC,uBAAuB,MAAM,KAAK;QAChD,OAAO;YAAE,OAAO;QAA4B;IAChD;AACJ;AAEA,SAAS,gBAAgB,GAAG;IACxB,QAAQ,GAAG,CAAC,mDAAmD;IAC/D,MAAM,OAAO,CAAC;QACV,OAAQ,IAAI,WAAW;YACnB,KAAK;gBACD,OAAO;YACX,KAAK;gBACD,OAAO;YACX,KAAK;gBACD,OAAO;YACX;gBACI,OAAO;QACf;IACJ,CAAC;IACD,QAAQ,GAAG,CAAC,6BAA6B;IACzC,OAAO;AACX"}},
    {"offset": {"line": 263, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 277, "column": 0}, "map": {"version":3,"sources":["file:///home/senorbuen0/ISC/sem6/bd/proyecto/citasmedicas_db/app/api/auth/login/route.js"],"sourcesContent":["import { authenticateUser } from \"../../../../libs/auth\";\nimport { NextResponse } from \"next/server\";\n\nexport async function POST(request) {\n  console.log(\"[LOGIN] Iniciando proceso de login...\");\n  try {\n    const body = await request.json();\n    const { email, password } = body;\n    console.log(\"[LOGIN] Datos recibidos:\", { email, password: \"***\" });\n\n    if (!email || !password) {\n      console.log(\"[LOGIN] Faltan credenciales\");\n      return NextResponse.json(\n        { error: \"Correo y contraseña son requeridos\" },\n        { status: 400 },\n      );\n    }\n\n    console.log(\"[LOGIN] Autenticando usuario...\");\n    const result = await authenticateUser(email, password);\n    console.log(\"[LOGIN] Resultado de autenticación:\", result);\n\n    if (result.error) {\n      console.log(\"[LOGIN] Error de autenticación:\", result.error);\n      return NextResponse.json({ error: result.error }, { status: 401 });\n    }\n\n    console.log(\"[LOGIN] Usuario autenticado exitosamente\");\n    return NextResponse.json(result);\n  } catch (error) {\n    console.error(\"[LOGIN] Error en el proceso de login:\", error);\n    console.error(\"[LOGIN] Stack trace:\", error.stack);\n    return NextResponse.json(\n      { error: \"Error en el servidor\" },\n      { status: 500 },\n    );\n  }\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,eAAe,KAAK,OAAO;IAChC,QAAQ,GAAG,CAAC;IACZ,IAAI;QACF,MAAM,OAAO,MAAM,QAAQ,IAAI;QAC/B,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,GAAG;QAC5B,QAAQ,GAAG,CAAC,4BAA4B;YAAE;YAAO,UAAU;QAAM;QAEjE,IAAI,CAAC,SAAS,CAAC,UAAU;YACvB,QAAQ,GAAG,CAAC;YACZ,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,OAAO;YAAqC,GAC9C;gBAAE,QAAQ;YAAI;QAElB;QAEA,QAAQ,GAAG,CAAC;QACZ,MAAM,SAAS,MAAM,CAAA,GAAA,8GAAA,CAAA,mBAAgB,AAAD,EAAE,OAAO;QAC7C,QAAQ,GAAG,CAAC,uCAAuC;QAEnD,IAAI,OAAO,KAAK,EAAE;YAChB,QAAQ,GAAG,CAAC,mCAAmC,OAAO,KAAK;YAC3D,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO,OAAO,KAAK;YAAC,GAAG;gBAAE,QAAQ;YAAI;QAClE;QAEA,QAAQ,GAAG,CAAC;QACZ,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;IAC3B,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,yCAAyC;QACvD,QAAQ,KAAK,CAAC,wBAAwB,MAAM,KAAK;QACjD,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO;QAAuB,GAChC;YAAE,QAAQ;QAAI;IAElB;AACF"}},
    {"offset": {"line": 324, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}