{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/middleware.js"],"sourcesContent":["import { NextResponse } from 'next/server'\nimport mysql from 'mysql2/promise'\n\n// Configuraci칩n de la base de datos\nconst dbConfig = {\n  host: process.env.DB_HOST || 'localhost',\n  user: process.env.DB_USER || 'root',\n  password: process.env.DB_PASSWORD || '',\n  database: process.env.DB_NAME || 'clinica_db'\n}\n\n// Middleware para manejar el current_user_id\nexport async function middleware(request) {\n  // Solo procesar peticiones a la API\n  if (!request.nextUrl.pathname.startsWith('/api')) {\n    return NextResponse.next()\n  }\n\n  // Obtener el user_id del sessionStorage (esto no funcionar치 en el middleware)\n  // En su lugar, usaremos el user_id que viene en los headers si existe\n  const userId = request.headers.get('user-id') || '1'\n\n  // Crear una conexi칩n a la base de datos\n  let conn\n  try {\n    conn = await mysql.createConnection(dbConfig)\n    await conn.execute('SET @current_user_id = ?', [userId])\n    console.log('Middleware: current_user_id asignado:', userId)\n  } catch (error) {\n    console.error('Error en middleware:', error)\n  } finally {\n    if (conn) {\n      await conn.end()\n    }\n  }\n\n  // Continuar con la petici칩n\n  return NextResponse.next()\n}\n\n// Configurar el middleware para que se ejecute en todas las rutas\nexport const config = {\n  matcher: '/api/:path*'\n} "],"names":[],"mappings":";;;;AAAA;AACA;AADA;;;AAGA,oCAAoC;AACpC,MAAM,WAAW;IACf,MAAM,QAAQ,GAAG,CAAC,OAAO,IAAI;IAC7B,MAAM,QAAQ,GAAG,CAAC,OAAO,IAAI;IAC7B,UAAU,QAAQ,GAAG,CAAC,WAAW,IAAI;IACrC,UAAU,QAAQ,GAAG,CAAC,OAAO,IAAI;AACnC;AAGO,eAAe,WAAW,OAAO;IACtC,oCAAoC;IACpC,IAAI,CAAC,QAAQ,OAAO,CAAC,QAAQ,CAAC,UAAU,CAAC,SAAS;QAChD,OAAO,qLAAA,CAAA,eAAY,CAAC,IAAI;IAC1B;IAEA,8EAA8E;IAC9E,sEAAsE;IACtE,MAAM,SAAS,QAAQ,OAAO,CAAC,GAAG,CAAC,cAAc;IAEjD,wCAAwC;IACxC,IAAI;IACJ,IAAI;QACF,OAAO,MAAM,iIAAA,CAAA,UAAK,CAAC,gBAAgB,CAAC;QACpC,MAAM,KAAK,OAAO,CAAC,4BAA4B;YAAC;SAAO;QACvD,QAAQ,GAAG,CAAC,yCAAyC;IACvD,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,wBAAwB;IACxC,SAAU;QACR,IAAI,MAAM;YACR,MAAM,KAAK,GAAG;QAChB;IACF;IAEA,4BAA4B;IAC5B,OAAO,qLAAA,CAAA,eAAY,CAAC,IAAI;AAC1B;AAGO,MAAM,SAAS;IACpB,SAAS;AACX"}},
    {"offset": {"line": 84, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}