{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/middleware.ts"],"sourcesContent":["import { NextResponse } from 'next/server';\nimport type { NextRequest } from 'next/server';\n\nexport function middleware(request: NextRequest) {\n  const path = request.nextUrl.pathname;\n\n  // Definir las rutas públicas\n  const isPublicPath = path === '/login' || path === '/register';\n\n  // Si es una ruta pública y el usuario está autenticado, redirigir al dashboard\n  if (isPublicPath) {\n    // Aquí podrías verificar si hay una sesión activa y redirigir al dashboard correspondiente\n    return NextResponse.next();\n  }\n\n  // Si es una ruta protegida y el usuario no está autenticado, redirigir al login\n  if (path.startsWith('/dashboard')) {\n    // Aquí deberías verificar si el usuario está autenticado y tiene el rol correcto\n    // Por ahora, permitiremos el acceso\n    return NextResponse.next();\n  }\n\n  return NextResponse.next();\n}\n\n// Configurar las rutas que el middleware debe manejar\nexport const config = {\n  matcher: [\n    '/login',\n    '/register',\n    '/dashboard/:path*'\n  ]\n}; "],"names":[],"mappings":";;;;AAAA;AAAA;;AAGO,SAAS,WAAW,OAAoB;IAC7C,MAAM,OAAO,QAAQ,OAAO,CAAC,QAAQ;IAErC,6BAA6B;IAC7B,MAAM,eAAe,SAAS,YAAY,SAAS;IAEnD,+EAA+E;IAC/E,IAAI,cAAc;QAChB,2FAA2F;QAC3F,OAAO,qLAAA,CAAA,eAAY,CAAC,IAAI;IAC1B;IAEA,gFAAgF;IAChF,IAAI,KAAK,UAAU,CAAC,eAAe;QACjC,iFAAiF;QACjF,oCAAoC;QACpC,OAAO,qLAAA,CAAA,eAAY,CAAC,IAAI;IAC1B;IAEA,OAAO,qLAAA,CAAA,eAAY,CAAC,IAAI;AAC1B;AAGO,MAAM,SAAS;IACpB,SAAS;QACP;QACA;QACA;KACD;AACH"}},
    {"offset": {"line": 54, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}