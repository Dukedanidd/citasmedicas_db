{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/middleware.ts"],"sourcesContent":["import { NextResponse } from 'next/server';\nimport type { NextRequest } from 'next/server';\n\nexport function middleware(request: NextRequest) {\n  // Obtener el origen de la petición\n  const origin = request.headers.get('origin') || '';\n  console.log('[Middleware] Origen de la petición:', origin);\n\n  // Verificar si es una petición de API\n  if (request.nextUrl.pathname.startsWith('/api')) {\n    console.log('[Middleware] Es una petición de API');\n    \n    // Crear la respuesta\n    const response = NextResponse.next();\n    \n    // Configurar CORS\n    response.headers.set('Access-Control-Allow-Origin', '*');\n    response.headers.set('Access-Control-Allow-Methods', 'GET, POST, PUT, DELETE, OPTIONS');\n    response.headers.set('Access-Control-Allow-Headers', 'Content-Type, Authorization');\n    response.headers.set('Access-Control-Allow-Credentials', 'true');\n    \n    // Si es una petición OPTIONS, responder inmediatamente\n    if (request.method === 'OPTIONS') {\n      console.log('[Middleware] Es una petición OPTIONS, respondiendo...');\n      return new NextResponse(null, { status: 204 });\n    }\n    \n    return response;\n  }\n\n  // Para rutas no-API, verificar autenticación\n  const isAuthPage = request.nextUrl.pathname.startsWith('/login') || \n                    request.nextUrl.pathname.startsWith('/register');\n  \n  const token = request.cookies.get('token')?.value;\n  console.log('[Middleware] Token presente:', !!token);\n  console.log('[Middleware] Es página de auth:', isAuthPage);\n\n  if (!token && !isAuthPage) {\n    console.log('[Middleware] Redirigiendo a login...');\n    return NextResponse.redirect(new URL('/login', request.url));\n  }\n\n  if (token && isAuthPage) {\n    console.log('[Middleware] Redirigiendo a dashboard...');\n    return NextResponse.redirect(new URL('/dashboard', request.url));\n  }\n\n  return NextResponse.next();\n}\n\nexport const config = {\n  matcher: [\n    '/api/:path*',\n    '/dashboard/:path*',\n    '/login',\n    '/register'\n  ]\n}; "],"names":[],"mappings":";;;;AAAA;AAAA;;AAGO,SAAS,WAAW,OAAoB;IAC7C,mCAAmC;IACnC,MAAM,SAAS,QAAQ,OAAO,CAAC,GAAG,CAAC,aAAa;IAChD,QAAQ,GAAG,CAAC,uCAAuC;IAEnD,sCAAsC;IACtC,IAAI,QAAQ,OAAO,CAAC,QAAQ,CAAC,UAAU,CAAC,SAAS;QAC/C,QAAQ,GAAG,CAAC;QAEZ,qBAAqB;QACrB,MAAM,WAAW,qLAAA,CAAA,eAAY,CAAC,IAAI;QAElC,kBAAkB;QAClB,SAAS,OAAO,CAAC,GAAG,CAAC,+BAA+B;QACpD,SAAS,OAAO,CAAC,GAAG,CAAC,gCAAgC;QACrD,SAAS,OAAO,CAAC,GAAG,CAAC,gCAAgC;QACrD,SAAS,OAAO,CAAC,GAAG,CAAC,oCAAoC;QAEzD,uDAAuD;QACvD,IAAI,QAAQ,MAAM,KAAK,WAAW;YAChC,QAAQ,GAAG,CAAC;YACZ,OAAO,IAAI,qLAAA,CAAA,eAAY,CAAC,MAAM;gBAAE,QAAQ;YAAI;QAC9C;QAEA,OAAO;IACT;IAEA,6CAA6C;IAC7C,MAAM,aAAa,QAAQ,OAAO,CAAC,QAAQ,CAAC,UAAU,CAAC,aACrC,QAAQ,OAAO,CAAC,QAAQ,CAAC,UAAU,CAAC;IAEtD,MAAM,QAAQ,QAAQ,OAAO,CAAC,GAAG,CAAC,UAAU;IAC5C,QAAQ,GAAG,CAAC,gCAAgC,CAAC,CAAC;IAC9C,QAAQ,GAAG,CAAC,mCAAmC;IAE/C,IAAI,CAAC,SAAS,CAAC,YAAY;QACzB,QAAQ,GAAG,CAAC;QACZ,OAAO,qLAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,UAAU,QAAQ,GAAG;IAC5D;IAEA,IAAI,SAAS,YAAY;QACvB,QAAQ,GAAG,CAAC;QACZ,OAAO,qLAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,cAAc,QAAQ,GAAG;IAChE;IAEA,OAAO,qLAAA,CAAA,eAAY,CAAC,IAAI;AAC1B;AAEO,MAAM,SAAS;IACpB,SAAS;QACP;QACA;QACA;QACA;KACD;AACH"}},
    {"offset": {"line": 76, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}