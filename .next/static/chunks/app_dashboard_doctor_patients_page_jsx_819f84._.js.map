{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/senorbuen0/ISC/sem6/bd/proyecto/citasmedicas_db/app/dashboard/doctor/patients/page.jsx"],"sourcesContent":["\"use client\"\n\nimport { useState, useEffect } from \"react\"\nimport { motion, AnimatePresence } from \"framer-motion\"\nimport { Search, Plus, User, Bell, Stethoscope, LogOut, Users, Calendar, Activity, X, Eye, EyeOff, Clock } from \"lucide-react\"\n\nexport default function PatientsPage() {\n  const [searchTerm, setSearchTerm] = useState(\"\")\n  const [doctorName, setDoctorName] = useState(\"\")\n  const [loading, setLoading] = useState(true)\n  const [error, setError] = useState(null)\n  const [patients, setPatients] = useState([])\n  const [showNewPatientModal, setShowNewPatientModal] = useState(false)\n  const [newPatient, setNewPatient] = useState({\n    primer_nombre: \"\",\n    segundo_nombre: \"\",\n    apellido_paterno: \"\",\n    apellido_materno: \"\",\n    email: \"\",\n    fecha_nacimiento: \"\",\n    sexo: \"M\",\n    password: \"\"\n  })\n  const [isSubmitting, setIsSubmitting] = useState(false)\n  const [submitError, setSubmitError] = useState(null)\n  const [showPassword, setShowPassword] = useState(false)\n  const [showNewAppointmentModal, setShowNewAppointmentModal] = useState(false)\n  const [selectedPatient, setSelectedPatient] = useState(null)\n  const [newAppointment, setNewAppointment] = useState({\n    fecha_hora: \"\",\n    notas: \"\",\n    estado_id: 1 // 1 = Programada\n  })\n  const [isSubmittingAppointment, setIsSubmittingAppointment] = useState(false)\n  const [appointmentError, setAppointmentError] = useState(null)\n\n  useEffect(() => {\n    const fetchDoctorData = async () => {\n      try {\n        const userId = sessionStorage.getItem('user_id')\n        if (!userId) {\n          throw new Error('No se encontró información de sesión')\n        }\n\n        const response = await fetch(`/api/doctores/${userId}`)\n        if (!response.ok) {\n          throw new Error('Error al cargar datos del doctor')\n        }\n\n        const data = await response.json()\n        setDoctorName(`${data.primer_nombre} ${data.segundo_nombre || ''} ${data.apellido_paterno} ${data.apellido_materno || ''}`)\n        return data.doctor_id // Retornamos el ID del doctor para usarlo en la siguiente llamada\n      } catch (err) {\n        console.error('Error al cargar datos del doctor:', err)\n        setError(err.message)\n        return null\n      }\n    }\n\n    const fetchPatients = async (doctorId) => {\n      if (!doctorId) return\n\n      try {\n        const response = await fetch(`/api/doctores/${doctorId}/pacientes`)\n        if (!response.ok) {\n          throw new Error('Error al cargar los pacientes')\n        }\n        const pacientesData = await response.json()\n        setPatients(pacientesData)\n      } catch (err) {\n        console.error('Error al cargar datos de pacientes:', err)\n        setError(err.message)\n      } finally {\n        setLoading(false)\n      }\n    }\n\n    const initializeData = async () => {\n      const doctorId = await fetchDoctorData()\n      if (doctorId) {\n        await fetchPatients(doctorId)\n      }\n    }\n\n    initializeData()\n  }, [])\n\n  const normalizeText = (text) => {\n    return text.normalize('NFD').replace(/[\\u0300-\\u036f]/g, '').toLowerCase();\n  };\n\n  const filteredPatients = patients.filter((patient) => {\n    const fullName = `${patient.primer_nombre} ${patient.segundo_nombre || ''} ${patient.apellido_paterno} ${patient.apellido_materno || ''}`;\n    return normalizeText(fullName).includes(normalizeText(searchTerm));\n  });\n\n  const handleNewPatientSubmit = async (e) => {\n    e.preventDefault()\n    setIsSubmitting(true)\n    setSubmitError(null)\n\n    try {\n      const userId = sessionStorage.getItem('user_id')\n      if (!userId) {\n        throw new Error('No se encontró información de sesión')\n      }\n\n      // Primero obtenemos el doctor_id\n      const doctorResponse = await fetch(`/api/doctores/${userId}`)\n      if (!doctorResponse.ok) {\n        throw new Error('Error al obtener datos del doctor')\n      }\n      const doctorData = await doctorResponse.json()\n\n      // Generamos una contraseña aleatoria si no se proporcionó una\n      const password = newPatient.password || Math.random().toString(36).slice(-8)\n\n      // Creamos el nuevo paciente\n      const response = await fetch('/api/pacientes', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          ...newPatient,\n          password, // Incluimos la contraseña\n          doctor_id: doctorData.doctor_id\n        }),\n      })\n\n      if (!response.ok) {\n        const errorData = await response.json()\n        throw new Error(errorData.error || 'Error al crear el paciente')\n      }\n\n      // Actualizamos la lista de pacientes\n      const updatedPatientsResponse = await fetch(`/api/doctores/${doctorData.doctor_id}/pacientes`)\n      if (updatedPatientsResponse.ok) {\n        const updatedPatients = await updatedPatientsResponse.json()\n        setPatients(updatedPatients)\n      }\n\n      // Limpiamos el formulario y cerramos el modal\n      setNewPatient({\n        primer_nombre: \"\",\n        segundo_nombre: \"\",\n        apellido_paterno: \"\",\n        apellido_materno: \"\",\n        email: \"\",\n        fecha_nacimiento: \"\",\n        sexo: \"M\",\n        password: \"\"\n      })\n      setShowNewPatientModal(false)\n\n      // Mostramos la contraseña generada si no se proporcionó una\n      if (!newPatient.password) {\n        alert(`Paciente creado exitosamente. Contraseña generada: ${password}`)\n      }\n    } catch (err) {\n      console.error('Error al crear paciente:', err)\n      setSubmitError(err.message)\n    } finally {\n      setIsSubmitting(false)\n    }\n  }\n\n  const handleNewAppointment = (patient) => {\n    setSelectedPatient(patient)\n    setNewAppointment({\n      fecha_hora: \"\",\n      notas: \"\",\n      estado_id: 1\n    })\n    setShowNewAppointmentModal(true)\n  }\n\n  const handleAppointmentSubmit = async (e) => {\n    e.preventDefault()\n    setIsSubmittingAppointment(true)\n    setAppointmentError(null)\n\n    try {\n      const userId = sessionStorage.getItem('user_id')\n      if (!userId) {\n        throw new Error('No se encontró información de sesión')\n      }\n\n      // Obtenemos el doctor_id\n      const doctorResponse = await fetch(`/api/doctores/${userId}`)\n      if (!doctorResponse.ok) {\n        throw new Error('Error al obtener datos del doctor')\n      }\n      const doctorData = await doctorResponse.json()\n\n      // Verificamos la disponibilidad del doctor\n      const fechaHora = new Date(newAppointment.fecha_hora)\n      const fecha = fechaHora.toISOString().split('T')[0]\n      const hora = fechaHora.toTimeString().split(' ')[0]\n\n      // Verificamos en la agenda\n      const agendaResponse = await fetch(`/api/agenda/${doctorData.doctor_id}/${fecha}`)\n      if (!agendaResponse.ok) {\n        throw new Error('Error al verificar disponibilidad')\n      }\n      const agendaData = await agendaResponse.json()\n\n      if (!agendaData || !agendaData.disponible) {\n        throw new Error('El doctor no tiene horario disponible en esta fecha')\n      }\n\n      // Verificamos que la hora esté dentro del horario de trabajo\n      const horaInicio = new Date(`${fecha}T${agendaData.hora_inicio}`)\n      const horaFin = new Date(`${fecha}T${agendaData.hora_fin}`)\n      \n      if (fechaHora < horaInicio || fechaHora > horaFin) {\n        throw new Error(`El horario de atención es de ${agendaData.hora_inicio} a ${agendaData.hora_fin}`)\n      }\n\n      // Verificamos citas existentes\n      const citasResponse = await fetch(`/api/citas/doctor/${doctorData.doctor_id}/${fecha}`)\n      if (!citasResponse.ok) {\n        throw new Error('Error al verificar citas existentes')\n      }\n      const citasData = await citasResponse.json()\n\n      // Verificamos si hay una cita en el mismo horario\n      const citaExistente = citasData.citas.find(cita => {\n        const citaHora = new Date(cita.fecha_hora)\n        return citaHora.getTime() === fechaHora.getTime()\n      })\n\n      if (citaExistente) {\n        throw new Error('Ya existe una cita programada en este horario')\n      }\n\n      // Creamos la nueva cita\n      const response = await fetch('/api/citas', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          ...newAppointment,\n          paciente_id: selectedPatient.paciente_id,\n          doctor_id: doctorData.doctor_id\n        }),\n      })\n\n      if (!response.ok) {\n        const errorData = await response.json()\n        throw new Error(errorData.error || 'Error al crear la cita')\n      }\n\n      // Limpiamos el formulario y cerramos el modal\n      setNewAppointment({\n        fecha_hora: \"\",\n        notas: \"\",\n        estado_id: 1\n      })\n      setShowNewAppointmentModal(false)\n      setSelectedPatient(null)\n\n      // Mostramos mensaje de éxito\n      alert('Cita creada exitosamente')\n    } catch (err) {\n      console.error('Error al crear cita:', err)\n      setAppointmentError(err.message)\n    } finally {\n      setIsSubmittingAppointment(false)\n    }\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-sky-50 via-blue-50 to-indigo-100\">\n      {/* Header */}\n      <motion.header\n        initial={{ y: -50, opacity: 0 }}\n        animate={{ y: 0, opacity: 1 }}\n        className=\"bg-white/80 backdrop-blur-lg border-b border-sky-200 px-6 py-4\"\n      >\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex items-center space-x-4\">\n            <div className=\"w-10 h-10 bg-gradient-to-br from-sky-400 to-blue-500 rounded-xl flex items-center justify-center\">\n              <Stethoscope className=\"text-white\" size={20} />\n            </div>\n            <div>\n              <h1 className=\"text-xl font-bold text-slate-800\">Gestión de Pacientes</h1>\n              <p className=\"text-sm text-slate-600\">{loading ? 'Cargando...' : error ? 'Error al cargar datos' : doctorName}</p>\n            </div>\n          </div>\n\n          <div className=\"flex items-center space-x-4\">\n            <motion.button\n              whileHover={{ scale: 1.05 }}\n              className=\"p-2 text-slate-600 hover:text-sky-600 transition-colors\"\n            >\n              <Bell size={20} />\n            </motion.button>\n            <motion.button\n              whileHover={{ scale: 1.02 }}\n              onClick={() => setShowNewPatientModal(true)}\n              className=\"flex items-center space-x-2 px-4 py-2 bg-sky-500 text-white rounded-lg hover:bg-sky-600 transition-colors\"\n            >\n              <Plus size={16} />\n              <span>Nuevo Paciente</span>\n            </motion.button>\n            <motion.button\n              whileHover={{ scale: 1.05 }}\n              className=\"p-2 text-slate-600 hover:text-red-600 transition-colors\"\n            >\n              <LogOut size={20} />\n            </motion.button>\n          </div>\n        </div>\n      </motion.header>\n\n      <div className=\"flex\">\n        {/* Sidebar */}\n        <motion.aside\n          initial={{ x: -100, opacity: 0 }}\n          animate={{ x: 0, opacity: 1 }}\n          className=\"w-64 bg-white/60 backdrop-blur-lg border-r border-sky-200 min-h-screen p-6\"\n        >\n          <nav className=\"space-y-4\">\n            <motion.a\n              href=\"/dashboard/doctor\"\n              whileHover={{ scale: 1.02 }}\n              whileTap={{ scale: 0.98 }}\n              className=\"w-full flex items-center space-x-3 px-4 py-3 rounded-xl text-slate-600 hover:bg-sky-50 transition-all duration-300\"\n            >\n              <Activity size={20} />\n              <span className=\"font-medium\">Dashboard</span>\n            </motion.a>\n\n            <motion.div\n              whileHover={{ scale: 1.02 }}\n              className=\"w-full flex items-center space-x-3 px-4 py-3 rounded-xl bg-sky-100 text-sky-700 shadow-sm\"\n            >\n              <Users size={20} />\n              <span className=\"font-medium\">Pacientes</span>\n            </motion.div>\n\n            <motion.a\n              href=\"/dashboard/doctor/appointments\"\n              whileHover={{ scale: 1.02 }}\n              whileTap={{ scale: 0.98 }}\n              className=\"w-full flex items-center space-x-3 px-4 py-3 rounded-xl text-slate-600 hover:bg-sky-50 transition-all duration-300\"\n            >\n              <Calendar size={20} />\n              <span className=\"font-medium\">Calendario</span>\n            </motion.a>\n          </nav>\n        </motion.aside>\n\n        {/* Main Content */}\n        <main className=\"flex-1 p-6\">\n          {/* Search Bar */}\n          <motion.div initial={{ opacity: 0, y: 20 }} animate={{ opacity: 1, y: 0 }} className=\"mb-6\">\n            <div className=\"relative max-w-md\">\n              <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-slate-400\" size={20} />\n              <input\n                type=\"text\"\n                placeholder=\"Buscar pacientes...\"\n                value={searchTerm}\n                onChange={(e) => setSearchTerm(e.target.value)}\n                className=\"w-full pl-10 pr-4 py-3 bg-white/80 border border-sky-200 rounded-xl focus:outline-none focus:ring-2 focus:ring-sky-400 focus:border-transparent transition-all duration-300 text-slate-800 placeholder:text-slate-400\"\n              />\n            </div>\n          </motion.div>\n\n          {/* Stats */}\n          <motion.div\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ delay: 0.1 }}\n            className=\"grid grid-cols-1 md:grid-cols-4 gap-4 mb-6\"\n          >\n            <div className=\"bg-white/80 backdrop-blur-lg rounded-xl p-4 border border-sky-100 shadow-lg\">\n              <div className=\"text-center\">\n                <p className=\"text-2xl font-bold text-slate-800\">{patients.length}</p>\n                <p className=\"text-sm text-slate-600\">Total Pacientes</p>\n              </div>\n            </div>\n            <div className=\"bg-white/80 backdrop-blur-lg rounded-xl p-4 border border-sky-100 shadow-lg\">\n              <div className=\"text-center\">\n                <p className=\"text-2xl font-bold text-green-600\">\n                  {patients.filter((p) => p.estado === \"Estable\").length}\n                </p>\n                <p className=\"text-sm text-slate-600\">Estables</p>\n              </div>\n            </div>\n            <div className=\"bg-white/80 backdrop-blur-lg rounded-xl p-4 border border-sky-100 shadow-lg\">\n              <div className=\"text-center\">\n                <p className=\"text-2xl font-bold text-yellow-600\">\n                  {patients.filter((p) => p.estado === \"Control\").length}\n                </p>\n                <p className=\"text-sm text-slate-600\">En Control</p>\n              </div>\n            </div>\n            <div className=\"bg-white/80 backdrop-blur-lg rounded-xl p-4 border border-sky-100 shadow-lg\">\n              <div className=\"text-center\">\n                <p className=\"text-2xl font-bold text-blue-600\">\n                  {patients.filter((p) => p.estado === \"Mejoría\").length}\n                </p>\n                <p className=\"text-sm text-slate-600\">En Mejoría</p>\n              </div>\n            </div>\n          </motion.div>\n\n          {/* Patients Grid */}\n          <motion.div\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            transition={{ delay: 0.2 }}\n            className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\"\n          >\n            {loading ? (\n              <div className=\"col-span-full text-center py-8\">\n                <p className=\"text-slate-600\">Cargando pacientes...</p>\n              </div>\n            ) : error ? (\n              <div className=\"col-span-full text-center py-8\">\n                <p className=\"text-red-600\">{error}</p>\n              </div>\n            ) : filteredPatients.length === 0 ? (\n              <div className=\"col-span-full text-center py-8\">\n                <p className=\"text-slate-600\">No se encontraron pacientes</p>\n              </div>\n            ) : (\n              filteredPatients.map((patient, index) => (\n              <motion.div\n                  key={patient.paciente_id}\n                initial={{ opacity: 0, y: 20 }}\n                animate={{ opacity: 1, y: 0 }}\n                transition={{ delay: index * 0.1 }}\n                whileHover={{ scale: 1.02 }}\n                className=\"bg-white/80 backdrop-blur-lg rounded-2xl p-6 border border-sky-100 shadow-lg cursor-pointer\"\n              >\n                <div className=\"flex items-center space-x-4 mb-4\">\n                  <div className=\"w-12 h-12 bg-gradient-to-br from-sky-400 to-blue-500 rounded-full flex items-center justify-center\">\n                    <User className=\"text-white\" size={20} />\n                  </div>\n                  <div>\n                      <h3 className=\"font-semibold text-slate-800\">\n                        {`${patient.primer_nombre} ${patient.segundo_nombre || ''} ${patient.apellido_paterno} ${patient.apellido_materno || ''}`}\n                      </h3>\n                      <p className=\"text-sm text-slate-600\">{patient.email}</p>\n                  </div>\n                </div>\n\n                <div className=\"space-y-2\">\n                  <div className=\"flex justify-between\">\n                      <span className=\"text-sm text-slate-600\">Fecha de Nacimiento:</span>\n                      <span className=\"text-sm font-medium text-slate-800\">\n                        {new Date(patient.fecha_nacimiento).toLocaleDateString()}\n                      </span>\n                  </div>\n                  <div className=\"flex justify-between\">\n                      <span className=\"text-sm text-slate-600\">Sexo:</span>\n                      <span className=\"text-sm text-slate-800\">{patient.sexo}</span>\n                  </div>\n                </div>\n\n                <div className=\"mt-4 flex space-x-2\">\n                  <motion.button\n                    whileHover={{ scale: 1.05 }}\n                    className=\"flex-1 px-3 py-2 bg-sky-100 text-sky-800 rounded-lg text-sm hover:bg-sky-200 transition-colors\"\n                  >\n                    Ver Historial\n                  </motion.button>\n                  <motion.button\n                    whileHover={{ scale: 1.05 }}\n                    onClick={() => handleNewAppointment(patient)}\n                    className=\"flex-1 px-3 py-2 bg-green-100 text-green-800 rounded-lg text-sm hover:bg-green-200 transition-colors\"\n                  >\n                    Nueva Cita\n                  </motion.button>\n                </div>\n              </motion.div>\n              ))\n            )}\n          </motion.div>\n        </main>\n      </div>\n\n      {/* Modal de Nuevo Paciente */}\n      <AnimatePresence>\n        {showNewPatientModal && (\n          <motion.div\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            exit={{ opacity: 0 }}\n            className=\"fixed inset-0 bg-black/50 backdrop-blur-sm flex items-center justify-center z-50\"\n            onClick={() => setShowNewPatientModal(false)}\n          >\n            <motion.div\n              initial={{ scale: 0.9, opacity: 0 }}\n              animate={{ scale: 1, opacity: 1 }}\n              exit={{ scale: 0.9, opacity: 0 }}\n              className=\"bg-white rounded-2xl p-6 w-full max-w-2xl max-h-[80vh] overflow-y-auto\"\n              onClick={(e) => e.stopPropagation()}\n            >\n              <div className=\"flex justify-between items-center mb-6\">\n                <h2 className=\"text-xl font-bold text-slate-800\">Nuevo Paciente</h2>\n                <button\n                  onClick={() => setShowNewPatientModal(false)}\n                  className=\"p-2 hover:bg-slate-100 rounded-full transition-colors\"\n                >\n                  <X size={20} className=\"text-slate-600\" />\n                </button>\n              </div>\n\n              <form onSubmit={handleNewPatientSubmit} className=\"space-y-4\">\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                  <div>\n                    <label className=\"block text-sm font-medium text-slate-700 mb-1\">\n                      Primer Nombre *\n                    </label>\n                    <input\n                      type=\"text\"\n                      required\n                      value={newPatient.primer_nombre}\n                      onChange={(e) => setNewPatient({ ...newPatient, primer_nombre: e.target.value })}\n                      className=\"w-full px-3 py-2 bg-white border border-sky-200 rounded-lg focus:outline-none focus:ring-2 focus:ring-sky-400 focus:border-transparent text-slate-800\"\n                    />\n                  </div>\n                  <div>\n                    <label className=\"block text-sm font-medium text-slate-700 mb-1\">\n                      Segundo Nombre\n                    </label>\n                    <input\n                      type=\"text\"\n                      value={newPatient.segundo_nombre}\n                      onChange={(e) => setNewPatient({ ...newPatient, segundo_nombre: e.target.value })}\n                      className=\"w-full px-3 py-2 bg-white border border-sky-200 rounded-lg focus:outline-none focus:ring-2 focus:ring-sky-400 focus:border-transparent text-slate-800\"\n                    />\n                  </div>\n                  <div>\n                    <label className=\"block text-sm font-medium text-slate-700 mb-1\">\n                      Apellido Paterno *\n                    </label>\n                    <input\n                      type=\"text\"\n                      required\n                      value={newPatient.apellido_paterno}\n                      onChange={(e) => setNewPatient({ ...newPatient, apellido_paterno: e.target.value })}\n                      className=\"w-full px-3 py-2 bg-white border border-sky-200 rounded-lg focus:outline-none focus:ring-2 focus:ring-sky-400 focus:border-transparent text-slate-800\"\n                    />\n                  </div>\n                  <div>\n                    <label className=\"block text-sm font-medium text-slate-700 mb-1\">\n                      Apellido Materno\n                    </label>\n                    <input\n                      type=\"text\"\n                      value={newPatient.apellido_materno}\n                      onChange={(e) => setNewPatient({ ...newPatient, apellido_materno: e.target.value })}\n                      className=\"w-full px-3 py-2 bg-white border border-sky-200 rounded-lg focus:outline-none focus:ring-2 focus:ring-sky-400 focus:border-transparent text-slate-800\"\n                    />\n                  </div>\n                  <div>\n                    <label className=\"block text-sm font-medium text-slate-700 mb-1\">\n                      Email *\n                    </label>\n                    <input\n                      type=\"email\"\n                      required\n                      value={newPatient.email}\n                      onChange={(e) => setNewPatient({ ...newPatient, email: e.target.value })}\n                      className=\"w-full px-3 py-2 bg-white border border-sky-200 rounded-lg focus:outline-none focus:ring-2 focus:ring-sky-400 focus:border-transparent text-slate-800\"\n                    />\n                  </div>\n                  <div>\n                    <label className=\"block text-sm font-medium text-slate-700 mb-1\">\n                      Fecha de Nacimiento *\n                    </label>\n                    <input\n                      type=\"date\"\n                      required\n                      value={newPatient.fecha_nacimiento}\n                      onChange={(e) => setNewPatient({ ...newPatient, fecha_nacimiento: e.target.value })}\n                      className=\"w-full px-3 py-2 bg-white border border-sky-200 rounded-lg focus:outline-none focus:ring-2 focus:ring-sky-400 focus:border-transparent text-slate-800\"\n                    />\n                  </div>\n                  <div>\n                    <label className=\"block text-sm font-medium text-slate-700 mb-1\">\n                      Sexo *\n                    </label>\n                    <select\n                      required\n                      value={newPatient.sexo}\n                      onChange={(e) => setNewPatient({ ...newPatient, sexo: e.target.value })}\n                      className=\"w-full px-3 py-2 bg-white border border-sky-200 rounded-lg focus:outline-none focus:ring-2 focus:ring-sky-400 focus:border-transparent text-slate-800\"\n                    >\n                      <option value=\"M\">Masculino</option>\n                      <option value=\"F\">Femenino</option>\n                      <option value=\"O\">Otro</option>\n                    </select>\n                  </div>\n                  <div>\n                    <label className=\"block text-sm font-medium text-slate-700 mb-1\">\n                      Contraseña (opcional)\n                    </label>\n                    <div className=\"relative\">\n                      <input\n                        type={showPassword ? \"text\" : \"password\"}\n                        value={newPatient.password}\n                        onChange={(e) => setNewPatient({ ...newPatient, password: e.target.value })}\n                        placeholder=\"Dejar en blanco para generar una aleatoria\"\n                        className=\"w-full px-3 py-2 bg-white border border-sky-200 rounded-lg focus:outline-none focus:ring-2 focus:ring-sky-400 focus:border-transparent text-slate-800 pr-10\"\n                      />\n                      <button\n                        type=\"button\"\n                        onClick={() => setShowPassword(!showPassword)}\n                        className=\"absolute right-3 top-1/2 -translate-y-1/2 text-slate-500 hover:text-slate-700 transition-colors\"\n                      >\n                        {showPassword ? <EyeOff size={18} /> : <Eye size={18} />}\n                      </button>\n                    </div>\n                    <p className=\"text-xs text-slate-500 mt-1\">\n                      Si no se proporciona una contraseña, se generará una aleatoria\n                    </p>\n                  </div>\n                </div>\n\n                {submitError && (\n                  <div className=\"text-red-600 text-sm mt-2\">\n                    {submitError}\n                  </div>\n                )}\n\n                <div className=\"flex justify-end space-x-3 mt-6\">\n                  <button\n                    type=\"button\"\n                    onClick={() => setShowNewPatientModal(false)}\n                    className=\"px-4 py-2 text-slate-600 hover:bg-slate-100 rounded-lg transition-colors\"\n                  >\n                    Cancelar\n                  </button>\n                  <button\n                    type=\"submit\"\n                    disabled={isSubmitting}\n                    className=\"px-4 py-2 bg-sky-500 text-white rounded-lg hover:bg-sky-600 transition-colors disabled:opacity-50 disabled:cursor-not-allowed\"\n                  >\n                    {isSubmitting ? 'Guardando...' : 'Guardar Paciente'}\n                  </button>\n                </div>\n              </form>\n            </motion.div>\n          </motion.div>\n        )}\n      </AnimatePresence>\n\n      {/* Modal de Nueva Cita */}\n      <AnimatePresence>\n        {showNewAppointmentModal && selectedPatient && (\n          <motion.div\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            exit={{ opacity: 0 }}\n            className=\"fixed inset-0 bg-black/50 backdrop-blur-sm flex items-center justify-center z-50\"\n            onClick={() => setShowNewAppointmentModal(false)}\n          >\n            <motion.div\n              initial={{ scale: 0.9, opacity: 0 }}\n              animate={{ scale: 1, opacity: 1 }}\n              exit={{ scale: 0.9, opacity: 0 }}\n              className=\"bg-white rounded-2xl p-6 w-full max-w-2xl\"\n              onClick={(e) => e.stopPropagation()}\n            >\n              <div className=\"flex justify-between items-center mb-6\">\n                <div>\n                  <h2 className=\"text-xl font-bold text-slate-800\">Nueva Cita</h2>\n                  <p className=\"text-sm text-slate-600 mt-1\">\n                    Paciente: {selectedPatient.primer_nombre} {selectedPatient.segundo_nombre || ''} {selectedPatient.apellido_paterno} {selectedPatient.apellido_materno || ''}\n                  </p>\n                </div>\n                <button\n                  onClick={() => setShowNewAppointmentModal(false)}\n                  className=\"p-2 hover:bg-slate-100 rounded-full transition-colors\"\n                >\n                  <X size={20} className=\"text-slate-600\" />\n                </button>\n              </div>\n\n              <form onSubmit={handleAppointmentSubmit} className=\"space-y-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-slate-700 mb-1\">\n                    Fecha y Hora *\n                  </label>\n                  <input\n                    type=\"datetime-local\"\n                    required\n                    value={newAppointment.fecha_hora}\n                    onChange={(e) => setNewAppointment({ ...newAppointment, fecha_hora: e.target.value })}\n                    min={new Date().toISOString().slice(0, 16)}\n                    className=\"w-full px-3 py-2 bg-white border border-sky-200 rounded-lg focus:outline-none focus:ring-2 focus:ring-sky-400 focus:border-transparent text-slate-800\"\n                  />\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-slate-700 mb-1\">\n                    Notas\n                  </label>\n                  <textarea\n                    value={newAppointment.notas}\n                    onChange={(e) => setNewAppointment({ ...newAppointment, notas: e.target.value })}\n                    placeholder=\"Agregar notas o detalles de la cita...\"\n                    rows={3}\n                    className=\"w-full px-3 py-2 bg-white border border-sky-200 rounded-lg focus:outline-none focus:ring-2 focus:ring-sky-400 focus:border-transparent text-slate-800 resize-none\"\n                  />\n                </div>\n\n                {appointmentError && (\n                  <div className=\"text-red-600 text-sm\">\n                    {appointmentError}\n                  </div>\n                )}\n\n                <div className=\"flex justify-end space-x-3 mt-6\">\n                  <button\n                    type=\"button\"\n                    onClick={() => setShowNewAppointmentModal(false)}\n                    className=\"px-4 py-2 text-slate-600 hover:bg-slate-100 rounded-lg transition-colors\"\n                  >\n                    Cancelar\n                  </button>\n                  <button\n                    type=\"submit\"\n                    disabled={isSubmittingAppointment}\n                    className=\"px-4 py-2 bg-sky-500 text-white rounded-lg hover:bg-sky-600 transition-colors disabled:opacity-50 disabled:cursor-not-allowed\"\n                  >\n                    {isSubmittingAppointment ? 'Creando...' : 'Crear Cita'}\n                  </button>\n                </div>\n              </form>\n            </motion.div>\n          </motion.div>\n        )}\n      </AnimatePresence>\n    </div>\n  )\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 1622, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}